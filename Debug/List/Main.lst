
AVRASM ver. 2.1.30  C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm Thu Jun 01 15:38:48 2023

C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1420): warning: Register r3 already defined by the .DEF directive
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1421): warning: Register r4 already defined by the .DEF directive
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1422): warning: Register r5 already defined by the .DEF directive
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1423): warning: Register r6 already defined by the .DEF directive
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1424): warning: Register r8 already defined by the .DEF directive
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1425): warning: Register r7 already defined by the .DEF directive
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1426): warning: Register r9 already defined by the .DEF directive
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1427): warning: Register r10 already defined by the .DEF directive
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1428): warning: Register r11 already defined by the .DEF directive
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1429): warning: Register r12 already defined by the .DEF directive
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1430): warning: Register r14 already defined by the .DEF directive
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1431): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.51 Evaluation
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega328P
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega328P
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x08FF
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R3
                 	.DEF _i_msb=R4
                 	.DEF _angle=R5
                 	.DEF _angle_msb=R6
                 	.DEF _IR_1=R8
                 	.DEF _IR_2=R7
                 	.DEF _count=R9
                 	.DEF _count_msb=R10
                 	.DEF _open=R11
                 	.DEF _open_msb=R12
                 	.DEF __lcd_x=R14
                 	.DEF __lcd_y=R13
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 006e 	JMP  __RESET
000002 940c 01a5 	JMP  _ext_int1_isr
000004 940c 01b2 	JMP  _ext_int2_isr
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 02fd 	JMP  _twi_int_handler
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G104:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G104:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00003d 0000
00003e 0000      	.DB  0x0,0x0,0x0,0x0
00003f 0000
000040 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x0:
000041 6f52
000042 6d6f
000043 6520
000044 706d      	.DB  0x52,0x6F,0x6F,0x6D,0x20,0x65,0x6D,0x70
000045 7974
000046 0021
000047 3025
000048 7532      	.DB  0x74,0x79,0x21,0x0,0x25,0x30,0x32,0x75
000049 253a
00004a 3230
00004b 0075
00004c 3025      	.DB  0x3A,0x25,0x30,0x32,0x75,0x0,0x25,0x30
00004d 7532
00004e 252f
00004f 3230
000050 2f75      	.DB  0x32,0x75,0x2F,0x25,0x30,0x32,0x75,0x2F
000051 3025
000052 7532
000053 5300
000054 6d75      	.DB  0x25,0x30,0x32,0x75,0x0,0x53,0x75,0x6D
000055 7020
000056 6f65
000057 6c70
000058 3a65      	.DB  0x20,0x70,0x65,0x6F,0x70,0x6C,0x65,0x3A
000059 2500
00005a 0075
00005b 7546
00005c 6c6c      	.DB  0x0,0x25,0x75,0x0,0x46,0x75,0x6C,0x6C
00005d 7020
00005e 6f65
00005f 6c70
000060 3a65      	.DB  0x20,0x70,0x65,0x6F,0x70,0x6C,0x65,0x3A
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1490): warning: .cseg .db misalignment - padding zero byte
000061 0000      	.DB  0x0
                 _0x2000003:
C:\Users\Admin\Desktop\Nhung_FT\Debug\List\Main.asm(1492): warning: .cseg .db misalignment - padding zero byte
000062 0007      	.DB  0x7
                 _0x2020003:
000063 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000064 0008      	.DW  0x08
000065 0005      	.DW  0x05
000066 007a      	.DW  __REG_VARS*2
                 
000067 0001      	.DW  0x01
000068 0302      	.DW  _twi_result
000069 00c4      	.DW  _0x2000003*2
                 
00006a 0002      	.DW  0x02
00006b 0310      	.DW  __base_y_G101
00006c 00c6      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
00006d 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00006e 94f8      	CLI
00006f 27ee      	CLR  R30
000070 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000071 e0f1      	LDI  R31,1
000072 bff5      	OUT  MCUCR,R31
000073 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000074 e08d      	LDI  R24,(14-2)+1
000075 e0a2      	LDI  R26,2
000076 27bb      	CLR  R27
                 __CLEAR_REG:
000077 93ed      	ST   X+,R30
000078 958a      	DEC  R24
000079 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00007a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00007b e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00007c e0a0      	LDI  R26,LOW(__SRAM_START)
00007d e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00007e 93ed      	ST   X+,R30
00007f 9701      	SBIW R24,1
000080 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000081 ece8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000082 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000083 9185      	LPM  R24,Z+
000084 9195      	LPM  R25,Z+
000085 9700      	SBIW R24,0
000086 f061      	BREQ __GLOBAL_INI_END
000087 91a5      	LPM  R26,Z+
000088 91b5      	LPM  R27,Z+
000089 9005      	LPM  R0,Z+
00008a 9015      	LPM  R1,Z+
00008b 01bf      	MOVW R22,R30
00008c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00008d 9005      	LPM  R0,Z+
00008e 920d      	ST   X+,R0
00008f 9701      	SBIW R24,1
000090 f7e1      	BRNE __GLOBAL_INI_LOOP
000091 01fb      	MOVW R30,R22
000092 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
000093 e0e0      	LDI  R30,__GPIOR0_INIT
000094 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000095 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000096 bfed      	OUT  SPL,R30
000097 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000098 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000099 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00009a e0d3      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00009b 940c 01f5 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x300
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.CSEG
                 _TWI_Init:
                 ; .FSTART _TWI_Init
00009d d6c0      	RCALL __SAVELOCR4
00009e 2f1a      	MOV  R17,R26
00009f 810c      	LDD  R16,Y+4
0000a0 813d      	LDD  R19,Y+5
                 ;	sla -> R19
                 ;	gcall -> R16
                 ;	sclock -> R17
0000a1 2fe3      	MOV  R30,R19
0000a2 0fee      	LSL  R30
0000a3 0fe0      	ADD  R30,R16
0000a4 93e0 00ba 	STS  186,R30
0000a6 d5e9      	RCALL SUBOPT_0x0
0000a7 2fe1      	MOV  R30,R17
0000a8 e0f0      	LDI  R31,0
                +
0000a9 2f6f     +MOV R22 , R31
0000aa 0f66     +ADD R22 , R22
0000ab 0b66     +SBC R22 , R22
0000ac 2f76     +MOV R23 , R22
                 	__CWD1
                +
0000ad e0a0     +LDI R26 , LOW ( 0xF42400 )
0000ae e2b4     +LDI R27 , HIGH ( 0xF42400 )
0000af ef84     +LDI R24 , BYTE3 ( 0xF42400 )
0000b0 e090     +LDI R25 , BYTE4 ( 0xF42400 )
                 	__GETD2N 0xF42400
0000b1 d714      	RCALL __DIVD21
                +
0000b2 51e0     +SUBI R30 , LOW ( 16 )
0000b3 40f0     +SBCI R31 , HIGH ( 16 )
0000b4 4060     +SBCI R22 , BYTE3 ( 16 )
0000b5 4070     +SBCI R23 , BYTE4 ( 16 )
                 	__SUBD1N 16
0000b6 01df      	MOVW R26,R30
0000b7 01cb      	MOVW R24,R22
                +
0000b8 e0e2     +LDI R30 , LOW ( 0x2 )
0000b9 e0f0     +LDI R31 , HIGH ( 0x2 )
0000ba e060     +LDI R22 , BYTE3 ( 0x2 )
0000bb e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
0000bc d709      	RCALL __DIVD21
0000bd 93e0 00b8 	STS  184,R30
0000bf e4e5      	LDI  R30,LOW(69)
0000c0 93e0 00bc 	STS  188,R30
0000c2 c04f      	RJMP _0x20C000A
                 ; .FEND
                 _TWI_Interupt_Enable:
                 ; .FSTART _TWI_Interupt_Enable
0000c3 91e0 00bc 	LDS  R30,188
0000c5 64e1      	ORI  R30,LOW(0x41)
0000c6 c010      	RJMP _0x20C000B
                 ; .FEND
                 _TWI_Interupt_Disable:
                 ; .FSTART _TWI_Interupt_Disable
0000c7 91e0 00bc 	LDS  R30,188
0000c9 7fee      	ANDI R30,0xFE
0000ca c00c      	RJMP _0x20C000B
                 ; .FEND
                 _TWI_Start:
                 ; .FSTART _TWI_Start
0000cb eae4      	LDI  R30,LOW(164)
0000cc 93e0 00bc 	STS  188,R30
                 _0x3:
0000ce 91e0 00bc 	LDS  R30,188
0000d0 78e0      	ANDI R30,LOW(0x80)
0000d1 f3e1      	BREQ _0x3
0000d2 91e0 00b9 	LDS  R30,185
0000d4 7fe8      	ANDI R30,LOW(0xF8)
0000d5 9508      	RET
                 ; .FEND
                 _TWI_Stop:
                 ; .FSTART _TWI_Stop
0000d6 e9e4      	LDI  R30,LOW(148)
                 _0x20C000B:
0000d7 93e0 00bc 	STS  188,R30
0000d9 9508      	RET
                 ; .FEND
                 _TWI_SLA_RW:
                 ; .FSTART _TWI_SLA_RW
0000da d5bb      	RCALL SUBOPT_0x1
                 ;	add -> R16
                 ;	rw -> R17
0000db 9300 00bb 	STS  187,R16
0000dd e8e4      	LDI  R30,LOW(132)
0000de 93e0 00bc 	STS  188,R30
                 _0x6:
0000e0 91e0 00bc 	LDS  R30,188
0000e2 78e0      	ANDI R30,LOW(0x80)
0000e3 f3e1      	BREQ _0x6
0000e4 91e0 00b9 	LDS  R30,185
0000e6 7fe8      	ANDI R30,LOW(0xF8)
0000e7 940c 04fe 	JMP  _0x20C0001
                 ; .FEND
                 _TWI_Send_Byte:
                 ; .FSTART _TWI_Send_Byte
0000e9 931a      	ST   -Y,R17
0000ea 2f1a      	MOV  R17,R26
                 ;	b -> R17
0000eb 9310 00bb 	STS  187,R17
0000ed e8e4      	LDI  R30,LOW(132)
0000ee 93e0 00bc 	STS  188,R30
                 _0x9:
0000f0 91e0 00bc 	LDS  R30,188
0000f2 78e0      	ANDI R30,LOW(0x80)
0000f3 f3e1      	BREQ _0x9
0000f4 91e0 00b9 	LDS  R30,185
0000f6 7fe8      	ANDI R30,LOW(0xF8)
0000f7 940c 04d5 	JMP  _0x20C0002
                 ; .FEND
                 _TWI_Send_Array:
                 ; .FSTART _TWI_Send_Array
0000f9 d664      	RCALL __SAVELOCR4
0000fa 018d      	MOVW R16,R26
                +
0000fb 812c     +LDD R18 , Y + 4
0000fc 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
                 ;	*arr -> R18,R19
                 ;	length -> R16,R17
0000fd 2433      	CLR  R3
0000fe 2444      	CLR  R4
                 _0xD:
                +
0000ff 1630     +CP R3 , R16
000100 0641     +CPC R4 , R17
                 	__CPWRR 3,4,16,17
000101 f46c      	BRGE _0xE
                +
000102 2de3     +MOV R30 , R3
000103 2df4     +MOV R31 , R4
                 	__GETW1R 3,4
000104 0fe2      	ADD  R30,R18
000105 1ff3      	ADC  R31,R19
000106 81a0      	LD   R26,Z
000107 dfe1      	RCALL _TWI_Send_Byte
000108 32e8      	CPI  R30,LOW(0x28)
000109 f429      	BRNE _0x20C0009
00010a e0e1      	LDI  R30,LOW(1)
00010b e0f0      	LDI  R31,HIGH(1)
                +
00010c 0e3e     +ADD R3 , R30
00010d 1e4f     +ADC R4 , R31
                 	__ADDWRR 3,4,30,31
00010e cff0      	RJMP _0xD
                 _0xE:
                 _0x20C0009:
00010f 91e0 00b9 	LDS  R30,185
000111 7fe8      	ANDI R30,LOW(0xF8)
                 _0x20C000A:
000112 d652      	RCALL __LOADLOCR4
000113 9626      	ADIW R28,6
000114 9508      	RET
                 ; .FEND
                 _TWI_Master_Send:
                 ; .FSTART _TWI_Master_Send
000115 d585      	RCALL SUBOPT_0x2
                 ;	sla -> R21
                 ;	*arr -> R18,R19
                 ;	length -> R16,R17
000116 f011      	BREQ _0x10
000117 e0e1      	LDI  R30,LOW(1)
000118 c057      	RJMP _0x20C0007
                 _0x10:
000119 935a      	ST   -Y,R21
00011a e0a0      	LDI  R26,LOW(0)
00011b dfbe      	RCALL _TWI_SLA_RW
00011c 31e8      	CPI  R30,LOW(0x18)
00011d f011      	BREQ _0x11
00011e e0e1      	LDI  R30,LOW(1)
00011f c050      	RJMP _0x20C0007
                 _0x11:
000120 933a      	ST   -Y,R19
000121 932a      	ST   -Y,R18
000122 01d8      	MOVW R26,R16
000123 dfd5      	RCALL _TWI_Send_Array
000124 32e8      	CPI  R30,LOW(0x28)
000125 f011      	BREQ _0x12
000126 e0e1      	LDI  R30,LOW(1)
000127 c048      	RJMP _0x20C0007
                 _0x12:
000128 c044      	RJMP _0x20C0008
                 ; .FEND
                 _TWI_Master_Receive:
                 ; .FSTART _TWI_Master_Receive
000129 d571      	RCALL SUBOPT_0x2
                 ;	sla -> R21
                 ;	*arr -> R18,R19
                 ;	length -> R16,R17
00012a f011      	BREQ _0x13
00012b e0e1      	LDI  R30,LOW(1)
00012c c043      	RJMP _0x20C0007
                 _0x13:
00012d 935a      	ST   -Y,R21
00012e e0a1      	LDI  R26,LOW(1)
00012f dfaa      	RCALL _TWI_SLA_RW
000130 34e0      	CPI  R30,LOW(0x40)
000131 f011      	BREQ _0x14
000132 e0e1      	LDI  R30,LOW(1)
000133 c03c      	RJMP _0x20C0007
                 _0x14:
000134 2433      	CLR  R3
000135 2444      	CLR  R4
                 _0x16:
000136 01f8      	MOVW R30,R16
000137 9731      	SBIW R30,1
000138 163e      	CP   R3,R30
000139 064f      	CPC  R4,R31
00013a f4e4      	BRGE _0x17
00013b ece4      	LDI  R30,LOW(196)
00013c 93e0 00bc 	STS  188,R30
                 _0x18:
00013e 91e0 00bc 	LDS  R30,188
000140 78e0      	ANDI R30,LOW(0x80)
000141 f3e1      	BREQ _0x18
000142 91e0 00b9 	LDS  R30,185
000144 7fe8      	ANDI R30,LOW(0xF8)
000145 35e0      	CPI  R30,LOW(0x50)
000146 f011      	BREQ _0x1B
000147 e0e1      	LDI  R30,LOW(1)
000148 c027      	RJMP _0x20C0007
                 _0x1B:
                +
000149 2da3     +MOV R26 , R3
00014a 2db4     +MOV R27 , R4
                 	__GETW2R 3,4
00014b 0fa2      	ADD  R26,R18
00014c 1fb3      	ADC  R27,R19
00014d 91e0 00bb 	LDS  R30,187
00014f 93ec      	ST   X,R30
                +
000150 2de3     +MOV R30 , R3
000151 2df4     +MOV R31 , R4
                 	__GETW1R 3,4
000152 9631      	ADIW R30,1
                +
000153 2e3e     +MOV R3 , R30
000154 2e4f     +MOV R4 , R31
                 	__PUTW1R 3,4
000155 9731      	SBIW R30,1
000156 cfdf      	RJMP _0x16
                 _0x17:
000157 e8e4      	LDI  R30,LOW(132)
000158 93e0 00bc 	STS  188,R30
                 _0x1C:
00015a 91e0 00bc 	LDS  R30,188
00015c 78e0      	ANDI R30,LOW(0x80)
00015d f3e1      	BREQ _0x1C
00015e 91e0 00b9 	LDS  R30,185
000160 7fe8      	ANDI R30,LOW(0xF8)
000161 35e8      	CPI  R30,LOW(0x58)
000162 f011      	BREQ _0x1F
000163 e0e1      	LDI  R30,LOW(1)
000164 c00b      	RJMP _0x20C0007
                 _0x1F:
000165 01f8      	MOVW R30,R16
000166 9731      	SBIW R30,1
000167 0fe2      	ADD  R30,R18
000168 1ff3      	ADC  R31,R19
000169 01df      	MOVW R26,R30
00016a 91e0 00bb 	LDS  R30,187
00016c 93ec      	ST   X,R30
                 _0x20C0008:
00016d df68      	RCALL _TWI_Stop
00016e df54      	RCALL _TWI_Interupt_Enable
00016f e0e0      	LDI  R30,LOW(0)
                 _0x20C0007:
000170 d5f2      	RCALL __LOADLOCR6
000171 9629      	ADIW R28,9
000172 9508      	RET
                 ; .FEND
                 _servo_init:
                 ; .FSTART _servo_init
000173 9a21      	SBI  0x4,1
000174 e0e0      	LDI  R30,LOW(0)
000175 93e0 0080 	STS  128,R30
000177 d52c      	RCALL SUBOPT_0x3
000178 60e2      	ORI  R30,2
000179 d52f      	RCALL SUBOPT_0x4
00017a 61e8      	ORI  R30,LOW(0x18)
00017b d528      	RCALL SUBOPT_0x3
00017c 68e0      	ORI  R30,0x80
00017d d52b      	RCALL SUBOPT_0x4
00017e 60e2      	ORI  R30,2
00017f 93e0 0081 	STS  129,R30
000181 e0e3      	LDI  R30,LOW(3)
000182 93e0 0089 	STS  137,R30
000184 eee8      	LDI  R30,LOW(232)
000185 93e0 0088 	STS  136,R30
000187 e9ec      	LDI  R30,LOW(156)
000188 93e0 0087 	STS  135,R30
00018a e4e0      	LDI  R30,LOW(64)
00018b 93e0 0086 	STS  134,R30
00018d 9508      	RET
                 ; .FEND
                 _servo_set_angle:
                 ; .FSTART _servo_set_angle
00018e 931a      	ST   -Y,R17
00018f 930a      	ST   -Y,R16
000190 018d      	MOVW R16,R26
                 ;	x -> R16,R17
                +
000191 e1a5     +LDI R26 , 21
000192 9fa0     +MUL R26 , R16
000193 01f0     +MOVW R30 , R0
000194 9fa1     +MUL R26 , R17
000195 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,21
000196 51e8      	SUBI R30,LOW(-1000)
000197 4ffc      	SBCI R31,HIGH(-1000)
000198 018f      	MOVW R16,R30
                +
000199 1505     +CP R16 , R5
00019a 0516     +CPC R17 , R6
                 	__CPWRR 16,17,5,6
00019b f039      	BREQ _0x20
00019c 9310 0089 	STS  137,R17
00019e 93e0 0088 	STS  136,R30
                +
0001a0 2e50     +MOV R5 , R16
0001a1 2e61     +MOV R6 , R17
                 	__MOVEWRR 5,6,16,17
0001a2 c001      	RJMP _0x21
                 _0x20:
0001a3 c04e      	RJMP _0x20C0006
                 _0x21:
0001a4 c04d      	RJMP _0x20C0006
                 ; .FEND
                 ;interrupt[2] void ext_int1_isr(void)
                 ; 0000 001E {
                 _ext_int1_isr:
                 ; .FSTART _ext_int1_isr
0001a5 d508      	RCALL SUBOPT_0x5
                 ; 0000 001F IR_1 = 1;
0001a6 2e8e      	MOV  R8,R30
                 ; 0000 0020 if((open == 0) && (count == 0))
0001a7 2400      	CLR  R0
0001a8 140b      	CP   R0,R11
0001a9 040c      	CPC  R0,R12
0001aa f421      	BRNE _0x23
0001ab 2400      	CLR  R0
0001ac 1409      	CP   R0,R9
0001ad 040a      	CPC  R0,R10
0001ae f009      	BREQ _0x24
                 _0x23:
0001af c001      	RJMP _0x22
                 _0x24:
                 ; 0000 0021 {
                 ; 0000 0022 open = 1;
0001b0 d50c      	RCALL SUBOPT_0x6
                 ; 0000 0023 servo_set_angle(180);
                 ; 0000 0024 }
                 ; 0000 0025 }
                 _0x22:
0001b1 c00d      	RJMP _0x40
                 ; .FEND
                 ;interrupt[3] void ext_int2_isr(void)
                 ; 0000 0028 {
                 _ext_int2_isr:
                 ; .FSTART _ext_int2_isr
0001b2 d4fb      	RCALL SUBOPT_0x5
                 ; 0000 0029 IR_2 = 1;
0001b3 2e7e      	MOV  R7,R30
                 ; 0000 002A if((open == 0) && (count == 10))
0001b4 2400      	CLR  R0
0001b5 140b      	CP   R0,R11
0001b6 040c      	CPC  R0,R12
0001b7 f429      	BRNE _0x26
0001b8 e0ea      	LDI  R30,LOW(10)
0001b9 e0f0      	LDI  R31,HIGH(10)
0001ba 15e9      	CP   R30,R9
0001bb 05fa      	CPC  R31,R10
0001bc f009      	BREQ _0x27
                 _0x26:
0001bd c001      	RJMP _0x25
                 _0x27:
                 ; 0000 002B {
                 ; 0000 002C open = 1;
0001be d4fe      	RCALL SUBOPT_0x6
                 ; 0000 002D servo_set_angle(180);
                 ; 0000 002E }
                 ; 0000 002F }
                 _0x25:
                 _0x40:
0001bf 91e9      	LD   R30,Y+
0001c0 bfef      	OUT  SREG,R30
0001c1 91f9      	LD   R31,Y+
0001c2 91e9      	LD   R30,Y+
0001c3 91b9      	LD   R27,Y+
0001c4 91a9      	LD   R26,Y+
0001c5 9199      	LD   R25,Y+
0001c6 9189      	LD   R24,Y+
0001c7 9179      	LD   R23,Y+
0001c8 9169      	LD   R22,Y+
0001c9 90f9      	LD   R15,Y+
0001ca 9019      	LD   R1,Y+
0001cb 9009      	LD   R0,Y+
0001cc 9518      	RETI
                 ; .FEND
                 ;void DS1307_get_all(unsigned char *time)
                 ; 0000 0032 {
                 _DS1307_get_all:
                 ; .FSTART _DS1307_get_all
                 ; 0000 0033 
                 ; 0000 0034 regit[0] = 0;
0001cd 931a      	ST   -Y,R17
0001ce 930a      	ST   -Y,R16
0001cf 018d      	MOVW R16,R26
                 ;	*time -> R16,R17
0001d0 e0e0      	LDI  R30,LOW(0)
0001d1 93e0 0303 	STS  _regit,R30
                 ; 0000 0035 TWI_Master_Send(208, regit, 1);
0001d3 ede0      	LDI  R30,LOW(208)
0001d4 93ea      	ST   -Y,R30
0001d5 e0e3      	LDI  R30,LOW(_regit)
0001d6 e0f3      	LDI  R31,HIGH(_regit)
0001d7 93fa      	ST   -Y,R31
0001d8 93ea      	ST   -Y,R30
0001d9 e0a1      	LDI  R26,LOW(1)
0001da e0b0      	LDI  R27,0
0001db df39      	RCALL _TWI_Master_Send
                 ; 0000 0036 TWI_Master_Receive(209, time, 7);
0001dc ede1      	LDI  R30,LOW(209)
0001dd 93ea      	ST   -Y,R30
0001de 931a      	ST   -Y,R17
0001df 930a      	ST   -Y,R16
0001e0 e0a7      	LDI  R26,LOW(7)
0001e1 e0b0      	LDI  R27,0
0001e2 df46      	RCALL _TWI_Master_Receive
                 ; 0000 0037 
                 ; 0000 0038 
                 ; 0000 0039 }
0001e3 c00e      	RJMP _0x20C0006
                 ; .FEND
                 ;unsigned int BCD2DEC(unsigned int bcd)
                 ; 0000 003C {
                 _BCD2DEC:
                 ; .FSTART _BCD2DEC
                 ; 0000 003D return (bcd >> 4) * 10 + (bcd & 0x0F);
0001e4 931a      	ST   -Y,R17
0001e5 930a      	ST   -Y,R16
0001e6 018d      	MOVW R16,R26
                 ;	bcd -> R16,R17
0001e7 01f8      	MOVW R30,R16
0001e8 d595      	RCALL __LSRW4
0001e9 e0aa      	LDI  R26,LOW(10)
0001ea e0b0      	LDI  R27,HIGH(10)
0001eb d59b      	RCALL __MULW12U
0001ec 01df      	MOVW R26,R30
0001ed 01f8      	MOVW R30,R16
0001ee 70ef      	ANDI R30,LOW(0xF)
0001ef 70f0      	ANDI R31,HIGH(0xF)
0001f0 0fea      	ADD  R30,R26
0001f1 1ffb      	ADC  R31,R27
                 _0x20C0006:
0001f2 9109      	LD   R16,Y+
0001f3 9119      	LD   R17,Y+
0001f4 9508      	RET
                 ; 0000 003E }
                 ; .FEND
                 ;void main(void)
                 ; 0000 0043 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0044 unsigned char time[7];
                 ; 0000 0045 unsigned char i;
                 ; 0000 0046 DDRD &= ~(1 << SENSOR1_PIN);
0001f5 9727      	SBIW R28,7
                 ;	time -> Y+0
                 ;	i -> R17
0001f6 9852      	CBI  0xA,2
                 ; 0000 0047 DDRD &= ~(1 << SENSOR2_PIN);
0001f7 9853      	CBI  0xA,3
                 ; 0000 0048 
                 ; 0000 0049 EICRA |= (1 << ISC01);
0001f8 91e0 0069 	LDS  R30,105
0001fa 60e2      	ORI  R30,2
0001fb 93e0 0069 	STS  105,R30
                 ; 0000 004A EICRA |= (1 << ISC11);
0001fd 91e0 0069 	LDS  R30,105
0001ff 60e8      	ORI  R30,8
000200 93e0 0069 	STS  105,R30
                 ; 0000 004B EIMSK |= (1 << INT0); // Cho ph�p interrupt INT0
000202 9ae8      	SBI  0x1D,0
                 ; 0000 004C EIMSK |= (1 << INT1); // Cho ph�p interrupt INT1
000203 9ae9      	SBI  0x1D,1
                 ; 0000 004D #asm("sei")
000204 9478      	SEI
                 ; 0000 004E 
                 ; 0000 004F TWI_Init(1, 1, 100000);
000205 e0e1      	LDI  R30,LOW(1)
000206 93ea      	ST   -Y,R30
000207 93ea      	ST   -Y,R30
000208 eaa0      	LDI  R26,LOW(160)
000209 de93      	RCALL _TWI_Init
                 ; 0000 0050 twi_master_init(100);
00020a e6a4      	LDI  R26,LOW(100)
00020b e0b0      	LDI  R27,0
00020c d063      	RCALL _twi_master_init
                 ; 0000 0051 servo_init();
00020d df65      	RCALL _servo_init
                 ; 0000 0052 lcd_twi_init(LCD_ADDRESS, 16);
00020e e2e7      	LDI  R30,LOW(39)
00020f 93ea      	ST   -Y,R30
000210 e1a0      	LDI  R26,LOW(16)
000211 d2c5      	RCALL _lcd_twi_init
                 ; 0000 0053 lcd_clear();
000212 d4b1      	RCALL SUBOPT_0x7
                 ; 0000 0054 lcd_printfxy(0, 0, "Room empty!");
                +
000213 e8e2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000214 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000215 d4b3      	RCALL SUBOPT_0x8
                 ; 0000 0055 DDRB.5 = 1;
000216 9a25      	SBI  0x4,5
                 ; 0000 0056 PORTB.5 = 1;
000217 9a2d      	SBI  0x5,5
                 ; 0000 0057 
                 ; 0000 0058 while (1)
                 _0x2C:
                 ; 0000 0059 {
                 ; 0000 005A DS1307_get_all(time);
000218 01de      	MOVW R26,R28
000219 dfb3      	RCALL _DS1307_get_all
                 ; 0000 005B for(i = 0; i < 7; i++)
00021a e010      	LDI  R17,LOW(0)
                 _0x30:
00021b 3017      	CPI  R17,7
00021c f480      	BRSH _0x31
                 ; 0000 005C time[i] = BCD2DEC(time[i]);
00021d d4b1      	RCALL SUBOPT_0x9
00021e 0fea      	ADD  R30,R26
00021f 1ffb      	ADC  R31,R27
000220 93ff      	PUSH R31
000221 93ef      	PUSH R30
000222 d4ac      	RCALL SUBOPT_0x9
000223 0fae      	ADD  R26,R30
000224 1fbf      	ADC  R27,R31
000225 91ac      	LD   R26,X
000226 27bb      	CLR  R27
000227 dfbc      	RCALL _BCD2DEC
000228 91af      	POP  R26
000229 91bf      	POP  R27
00022a 93ec      	ST   X,R30
00022b 5f1f      	SUBI R17,-1
00022c cfee      	RJMP _0x30
                 _0x31:
                 ; 0000 005E lcd_printfxy(0, 1, "%02u:%02u", time[2], time[1], time[0]);
00022d d4a5      	RCALL SUBOPT_0xA
                 ; 0000 005F // display date
                 ; 0000 0060 lcd_printfxy(6, 1, "%02u/%02u/%02u", time[4], time[5], time[6]);
                 ; 0000 0061 if (IR_1)
00022e 2088      	TST  R8
00022f f089      	BREQ _0x32
                 ; 0000 0062 {
                 ; 0000 0063 delay_ms(800);
000230 e2a0      	LDI  R26,LOW(800)
000231 e0b3      	LDI  R27,HIGH(800)
000232 d5ad      	RCALL _delay_ms
                 ; 0000 0064 if (IR_2)
000233 2077      	TST  R7
000234 f059      	BREQ _0x33
                 ; 0000 0065 {
                 ; 0000 0066 count++;
000235 e0e1      	LDI  R30,LOW(1)
000236 e0f0      	LDI  R31,HIGH(1)
                +
000237 0e9e     +ADD R9 , R30
000238 1eaf     +ADC R10 , R31
                 	__ADDWRR 9,10,30,31
                 ; 0000 0067 lcd_clear();
000239 d48a      	RCALL SUBOPT_0x7
                 ; 0000 0068 lcd_printfxy(0, 0, "Sum people:");
                +
00023a eae7     +LDI R30 , LOW ( 2 * _0x0 + ( 37 ) )
00023b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 37 ) )
                 	__POINTW1FN _0x0,37
00023c d48c      	RCALL SUBOPT_0x8
                 ; 0000 0069 lcd_printfxy(12, 0, "%u", count);
00023d d4ca      	RCALL SUBOPT_0xB
                 ; 0000 006A IR_1 = 0;
                 ; 0000 006B IR_2 = 0;
00023e 2477      	CLR  R7
                 ; 0000 006C }
                 ; 0000 006D else
00023f c001      	RJMP _0x34
                 _0x33:
                 ; 0000 006E IR_1 = 0;
000240 2488      	CLR  R8
                 ; 0000 006F }
                 _0x34:
                 ; 0000 0070 
                 ; 0000 0071 if (IR_2)
                 _0x32:
000241 2077      	TST  R7
000242 f081      	BREQ _0x35
                 ; 0000 0072 {
                 ; 0000 0073 delay_ms(800);
000243 e2a0      	LDI  R26,LOW(800)
000244 e0b3      	LDI  R27,HIGH(800)
000245 d59a      	RCALL _delay_ms
                 ; 0000 0074 if (IR_1)
000246 2088      	TST  R8
000247 f051      	BREQ _0x36
                 ; 0000 0075 {
                 ; 0000 0076 count--;
                +
000248 2de9     +MOV R30 , R9
000249 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
00024a 9731      	SBIW R30,1
                +
00024b 2e9e     +MOV R9 , R30
00024c 2eaf     +MOV R10 , R31
                 	__PUTW1R 9,10
                 ; 0000 0077 lcd_clear();
00024d d476      	RCALL SUBOPT_0x7
                 ; 0000 0078 lcd_printfxy(0, 0, "Sum people:");
                +
00024e eae7     +LDI R30 , LOW ( 2 * _0x0 + ( 37 ) )
00024f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 37 ) )
                 	__POINTW1FN _0x0,37
000250 d478      	RCALL SUBOPT_0x8
                 ; 0000 0079 lcd_printfxy(12, 0, "%u", count);
000251 d4b6      	RCALL SUBOPT_0xB
                 ; 0000 007A IR_1 = 0;
                 ; 0000 007B IR_2 = 0;
                 ; 0000 007C }
                 ; 0000 007D else
                 _0x36:
                 ; 0000 007E IR_2 = 0;
                 _0x3F:
000252 2477      	CLR  R7
                 ; 0000 007F }
                 ; 0000 0080 
                 ; 0000 0081 if (((count == 0) || (count > 9)) && (open == 1))
                 _0x35:
000253 2400      	CLR  R0
000254 1409      	CP   R0,R9
000255 040a      	CPC  R0,R10
000256 f011      	BREQ _0x39
000257 d4c2      	RCALL SUBOPT_0xC
000258 f428      	BRSH _0x3B
                 _0x39:
000259 e0e1      	LDI  R30,LOW(1)
00025a e0f0      	LDI  R31,HIGH(1)
00025b 15eb      	CP   R30,R11
00025c 05fc      	CPC  R31,R12
00025d f009      	BREQ _0x3C
                 _0x3B:
00025e c00e      	RJMP _0x38
                 _0x3C:
                 ; 0000 0082 {
                 ; 0000 0083 delay_ms(2000);
00025f eda0      	LDI  R26,LOW(2000)
000260 e0b7      	LDI  R27,HIGH(2000)
000261 d57e      	RCALL _delay_ms
                 ; 0000 0084 open = 0;
000262 24bb      	CLR  R11
000263 24cc      	CLR  R12
                 ; 0000 0085 servo_set_angle(0);
000264 e0a0      	LDI  R26,LOW(0)
000265 e0b0      	LDI  R27,0
000266 df27      	RCALL _servo_set_angle
                 ; 0000 0086 if (count > 9)
000267 d4b2      	RCALL SUBOPT_0xC
000268 f420      	BRSH _0x3D
                 ; 0000 0087 {
                 ; 0000 0088 lcd_clear();
000269 d45a      	RCALL SUBOPT_0x7
                 ; 0000 0089 lcd_printfxy(0, 0, "Full people:");
                +
00026a ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 52 ) )
00026b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 52 ) )
                 	__POINTW1FN _0x0,52
00026c d45c      	RCALL SUBOPT_0x8
                 ; 0000 008A }
                 ; 0000 008B }
                 _0x3D:
                 ; 0000 008C 
                 ; 0000 008D //  if(count == 0)
                 ; 0000 008E // PORTB.5 = 1;
                 ; 0000 008F // else
                 ; 0000 0090 // PORTB.5 = 1;
                 ; 0000 0091 
                 ; 0000 0092 lcd_printfxy(0, 1, "%02u:%02u", time[2], time[1], time[0]);
                 _0x38:
00026d d465      	RCALL SUBOPT_0xA
                 ; 0000 0093 // display date
                 ; 0000 0094 lcd_printfxy(6, 1, "%02u/%02u/%02u", time[4], time[5], time[6]);
                 ; 0000 0095 
                 ; 0000 0096 }
00026e cfa9      	RJMP _0x2C
                 ; 0000 0097 
                 ; 0000 0098 }
                 _0x3E:
00026f cfff      	RJMP _0x3E
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _twi_master_init:
                 ; .FSTART _twi_master_init
000270 d4ed      	RCALL __SAVELOCR4
000271 019d      	MOVW R18,R26
000272 9af1      	SBI  0x1E,1
000273 e0e7      	LDI  R30,LOW(7)
000274 93e0 0302 	STS  _twi_result,R30
000276 e0e0      	LDI  R30,LOW(0)
000277 93e0 030c 	STS  _twi_slave_rx_handler_G100,R30
000279 93e0 030d 	STS  _twi_slave_rx_handler_G100+1,R30
00027b 93e0 030e 	STS  _twi_slave_tx_handler_G100,R30
00027d 93e0 030f 	STS  _twi_slave_tx_handler_G100+1,R30
00027f 9844      	CBI  0x8,4
000280 9845      	CBI  0x8,5
000281 93e0 00bc 	STS  188,R30
000283 d40c      	RCALL SUBOPT_0x0
000284 01f9      	MOVW R30,R18
000285 eaa0      	LDI  R26,LOW(4000)
000286 e0bf      	LDI  R27,HIGH(4000)
000287 d507      	RCALL __DIVW21U
000288 2f1e      	MOV  R17,R30
000289 3018      	CPI  R17,8
00028a f008      	BRLO _0x2000006
00028b 5018      	SUBI R17,LOW(8)
                 _0x2000006:
00028c 9310 00b8 	STS  184,R17
00028e 91e0 00bc 	LDS  R30,188
000290 78e0      	ANDI R30,LOW(0x80)
000291 64e5      	ORI  R30,LOW(0x45)
000292 93e0 00bc 	STS  188,R30
000294 d4d0      	RCALL __LOADLOCR4
000295 9624      	ADIW R28,4
000296 9508      	RET
                 ; .FEND
                 _twi_master_trans:
                 ; .FSTART _twi_master_trans
000297 9724      	SBIW R28,4
000298 d4c3      	RCALL __SAVELOCR6
000299 2f1a      	MOV  R17,R26
                +
00029a 852a     +LDD R18 , Y + 10
00029b 853b     +LDD R19 , Y + 10 + 1
                 	__GETWRS 18,19,10
00029c 850c      	LDD  R16,Y+12
                +
00029d 854d     +LDD R20 , Y + 13
00029e 855e     +LDD R21 , Y + 13 + 1
                 	__GETWRS 20,21,13
00029f 9bf1      	SBIS 0x1E,1
0002a0 c058      	RJMP _0x2000007
0002a1 85ef      	LDD  R30,Y+15
0002a2 0fee      	LSL  R30
0002a3 93e0 0304 	STS  _slave_address_G100,R30
                +
0002a5 9340 0305+STS _twi_tx_buffer_G100 + ( 0 ) , R20
0002a7 9350 0306+STS _twi_tx_buffer_G100 + ( 0 ) + 1 , R21
                 	__PUTWMRN _twi_tx_buffer_G100,0,20,21
0002a9 e0e0      	LDI  R30,LOW(0)
0002aa 93e0 0300 	STS  _twi_tx_index,R30
0002ac 9300 0307 	STS  _bytes_to_tx_G100,R16
                +
0002ae 9320 0308+STS _twi_rx_buffer_G100 + ( 0 ) , R18
0002b0 9330 0309+STS _twi_rx_buffer_G100 + ( 0 ) + 1 , R19
                 	__PUTWMRN _twi_rx_buffer_G100,0,18,19
0002b2 93e0 0301 	STS  _twi_rx_index,R30
0002b4 9310 030a 	STS  _bytes_to_rx_G100,R17
0002b6 e0e6      	LDI  R30,LOW(6)
0002b7 93e0 0302 	STS  _twi_result,R30
0002b9 9478      	SEI
0002ba 3000      	CPI  R16,0
0002bb f069      	BREQ _0x2000008
0002bc 2e04      	MOV  R0,R20
0002bd 2a05      	OR   R0,R21
0002be f1d1      	BREQ _0x20C0005
0002bf 3010      	CPI  R17,0
0002c0 f021      	BREQ _0x200000B
0002c1 2400      	CLR  R0
0002c2 1602      	CP   R0,R18
0002c3 0603      	CPC  R0,R19
0002c4 f009      	BREQ _0x200000C
                 _0x200000B:
0002c5 c001      	RJMP _0x200000A
                 _0x200000C:
0002c6 c032      	RJMP _0x20C0005
                 _0x200000A:
0002c7 9af0      	SBI  0x1E,0
0002c8 c00b      	RJMP _0x200000F
                 _0x2000008:
0002c9 3010      	CPI  R17,0
0002ca f131      	BREQ _0x2000010
0002cb 2e02      	MOV  R0,R18
0002cc 2a03      	OR   R0,R19
0002cd f159      	BREQ _0x20C0005
0002ce 91e0 0304 	LDS  R30,_slave_address_G100
0002d0 60e1      	ORI  R30,1
0002d1 93e0 0304 	STS  _slave_address_G100,R30
0002d3 98f0      	CBI  0x1E,0
                 _0x200000F:
0002d4 98f1      	CBI  0x1E,1
0002d5 91e0 00bc 	LDS  R30,188
0002d7 70ef      	ANDI R30,LOW(0xF)
0002d8 6ae0      	ORI  R30,LOW(0xA0)
0002d9 93e0 00bc 	STS  188,R30
                +
0002db e2e0     +LDI R30 , LOW ( 0x7A120 )
0002dc eaf1     +LDI R31 , HIGH ( 0x7A120 )
0002dd e067     +LDI R22 , BYTE3 ( 0x7A120 )
0002de e070     +LDI R23 , BYTE4 ( 0x7A120 )
                 	__GETD1N 0x7A120
0002df d43f      	RCALL SUBOPT_0xD
                 _0x2000016:
0002e0 99f1      	SBIC 0x1E,1
0002e1 c00f      	RJMP _0x2000018
                +
0002e2 81ee     +LDD R30 , Y + 6
0002e3 81ff     +LDD R31 , Y + 6 + 1
0002e4 8568     +LDD R22 , Y + 6 + 2
0002e5 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
0002e6 9731      	SBIW R30,1
0002e7 4060      	SBCI R22,0
0002e8 4070      	SBCI R23,0
0002e9 d435      	RCALL SUBOPT_0xD
0002ea f429      	BRNE _0x2000019
0002eb e0e5      	LDI  R30,LOW(5)
0002ec 93e0 0302 	STS  _twi_result,R30
0002ee 9af1      	SBI  0x1E,1
0002ef c009      	RJMP _0x20C0005
                 _0x2000019:
0002f0 cfef      	RJMP _0x2000016
                 _0x2000018:
                 _0x2000010:
0002f1 91a0 0302 	LDS  R26,_twi_result
0002f3 e0e0      	LDI  R30,LOW(0)
                +
0002f4 17ea     +CP R30 , R26
0002f5 e0e1     +LDI R30 , 1
0002f6 f009     +BREQ PC + 2
0002f7 27ee     +CLR R30
                 	__EQB12
0002f8 c001      	RJMP _0x20C0004
                 _0x2000007:
                 _0x20C0005:
0002f9 e0e0      	LDI  R30,LOW(0)
                 _0x20C0004:
0002fa d468      	RCALL __LOADLOCR6
0002fb 9660      	ADIW R28,16
0002fc 9508      	RET
                 ; .FEND
                 _twi_int_handler:
                 ; .FSTART _twi_int_handler
0002fd 920a      	ST   -Y,R0
0002fe 921a      	ST   -Y,R1
0002ff 92fa      	ST   -Y,R15
000300 936a      	ST   -Y,R22
000301 937a      	ST   -Y,R23
000302 938a      	ST   -Y,R24
000303 939a      	ST   -Y,R25
000304 93aa      	ST   -Y,R26
000305 93ba      	ST   -Y,R27
000306 93ea      	ST   -Y,R30
000307 93fa      	ST   -Y,R31
000308 b7ef      	IN   R30,SREG
000309 93ea      	ST   -Y,R30
00030a 935a      	ST   -Y,R21
00030b 934a      	ST   -Y,R20
00030c 933a      	ST   -Y,R19
00030d 932a      	ST   -Y,R18
00030e 931a      	ST   -Y,R17
00030f 930a      	ST   -Y,R16
000310 9110 0301 	LDS  R17,_twi_rx_index
000312 9100 0300 	LDS  R16,_twi_tx_index
000314 9130 0307 	LDS  R19,_bytes_to_tx_G100
000316 9120 0302 	LDS  R18,_twi_result
000318 2fe1      	MOV  R30,R17
000319 91a0 0308 	LDS  R26,_twi_rx_buffer_G100
00031b 91b0 0309 	LDS  R27,_twi_rx_buffer_G100+1
00031d e0f0      	LDI  R31,0
00031e 0fea      	ADD  R30,R26
00031f 1ffb      	ADC  R31,R27
000320 01af      	MOVW R20,R30
000321 91e0 00b9 	LDS  R30,185
000323 7fe8      	ANDI R30,LOW(0xF8)
000324 30e8      	CPI  R30,LOW(0x8)
000325 f411      	BRNE _0x2000023
000326 e020      	LDI  R18,LOW(0)
000327 c002      	RJMP _0x2000024
                 _0x2000023:
000328 31e0      	CPI  R30,LOW(0x10)
000329 f419      	BRNE _0x2000025
                 _0x2000024:
00032a 91e0 0304 	LDS  R30,_slave_address_G100
00032c c010      	RJMP _0x2000080
                 _0x2000025:
00032d 31e8      	CPI  R30,LOW(0x18)
00032e f011      	BREQ _0x2000029
00032f 32e8      	CPI  R30,LOW(0x28)
000330 f541      	BRNE _0x200002A
                 _0x2000029:
000331 1703      	CP   R16,R19
000332 f498      	BRSH _0x200002B
000333 2fe0      	MOV  R30,R16
000334 5f0f      	SUBI R16,-1
000335 91a0 0305 	LDS  R26,_twi_tx_buffer_G100
000337 91b0 0306 	LDS  R27,_twi_tx_buffer_G100+1
000339 e0f0      	LDI  R31,0
00033a 0fae      	ADD  R26,R30
00033b 1fbf      	ADC  R27,R31
00033c 91ec      	LD   R30,X
                 _0x2000080:
00033d 93e0 00bb 	STS  187,R30
00033f 91e0 00bc 	LDS  R30,188
000341 70ef      	ANDI R30,LOW(0xF)
000342 68e0      	ORI  R30,0x80
000343 93e0 00bc 	STS  188,R30
000345 c012      	RJMP _0x200002C
                 _0x200002B:
000346 91e0 030a 	LDS  R30,_bytes_to_rx_G100
000348 171e      	CP   R17,R30
000349 f468      	BRSH _0x200002D
00034a 91e0 0304 	LDS  R30,_slave_address_G100
00034c 60e1      	ORI  R30,1
00034d 93e0 0304 	STS  _slave_address_G100,R30
00034f 98f0      	CBI  0x1E,0
000350 91e0 00bc 	LDS  R30,188
000352 70ef      	ANDI R30,LOW(0xF)
000353 6ae0      	ORI  R30,LOW(0xA0)
000354 93e0 00bc 	STS  188,R30
000356 c10d      	RJMP _0x2000022
                 _0x200002D:
000357 c038      	RJMP _0x2000030
                 _0x200002C:
000358 c10b      	RJMP _0x2000022
                 _0x200002A:
000359 35e0      	CPI  R30,LOW(0x50)
00035a f431      	BRNE _0x2000031
00035b 91e0 00bb 	LDS  R30,187
00035d 01da      	MOVW R26,R20
00035e 93ec      	ST   X,R30
00035f 5f1f      	SUBI R17,-LOW(1)
000360 c002      	RJMP _0x2000032
                 _0x2000031:
000361 34e0      	CPI  R30,LOW(0x40)
000362 f489      	BRNE _0x2000033
                 _0x2000032:
000363 91e0 030a 	LDS  R30,_bytes_to_rx_G100
000365 50e1      	SUBI R30,LOW(1)
000366 171e      	CP   R17,R30
000367 f028      	BRLO _0x2000034
000368 91e0 00bc 	LDS  R30,188
00036a 70ef      	ANDI R30,LOW(0xF)
00036b 68e0      	ORI  R30,0x80
00036c c004      	RJMP _0x2000081
                 _0x2000034:
00036d 91e0 00bc 	LDS  R30,188
00036f 70ef      	ANDI R30,LOW(0xF)
000370 6ce0      	ORI  R30,LOW(0xC0)
                 _0x2000081:
000371 93e0 00bc 	STS  188,R30
000373 c0f0      	RJMP _0x2000022
                 _0x2000033:
000374 35e8      	CPI  R30,LOW(0x58)
000375 f431      	BRNE _0x2000036
000376 91e0 00bb 	LDS  R30,187
000378 01da      	MOVW R26,R20
000379 93ec      	ST   X,R30
00037a 5f1f      	SUBI R17,-LOW(1)
00037b c002      	RJMP _0x2000037
                 _0x2000036:
00037c 32e0      	CPI  R30,LOW(0x20)
00037d f409      	BRNE _0x2000038
                 _0x2000037:
00037e c002      	RJMP _0x2000039
                 _0x2000038:
00037f 33e0      	CPI  R30,LOW(0x30)
000380 f409      	BRNE _0x200003A
                 _0x2000039:
000381 c002      	RJMP _0x200003B
                 _0x200003A:
000382 34e8      	CPI  R30,LOW(0x48)
000383 f469      	BRNE _0x200003C
                 _0x200003B:
000384 3020      	CPI  R18,0
000385 f451      	BRNE _0x200003D
000386 9bf0      	SBIS 0x1E,0
000387 c003      	RJMP _0x200003E
000388 1703      	CP   R16,R19
000389 f028      	BRLO _0x2000040
00038a c005      	RJMP _0x2000041
                 _0x200003E:
00038b 91e0 030a 	LDS  R30,_bytes_to_rx_G100
00038d 171e      	CP   R17,R30
00038e f408      	BRSH _0x2000042
                 _0x2000040:
00038f e024      	LDI  R18,LOW(4)
                 _0x2000042:
                 _0x2000041:
                 _0x200003D:
                 _0x2000030:
000390 c0cc      	RJMP _0x2000082
                 _0x200003C:
000391 33e8      	CPI  R30,LOW(0x38)
000392 f431      	BRNE _0x2000045
000393 e022      	LDI  R18,LOW(2)
000394 91e0 00bc 	LDS  R30,188
000396 70ef      	ANDI R30,LOW(0xF)
000397 68e0      	ORI  R30,0x80
000398 c0c8      	RJMP _0x2000083
                 _0x2000045:
000399 36e8      	CPI  R30,LOW(0x68)
00039a f011      	BREQ _0x2000048
00039b 37e8      	CPI  R30,LOW(0x78)
00039c f411      	BRNE _0x2000049
                 _0x2000048:
00039d e022      	LDI  R18,LOW(2)
00039e c005      	RJMP _0x200004A
                 _0x2000049:
00039f 36e0      	CPI  R30,LOW(0x60)
0003a0 f011      	BREQ _0x200004D
0003a1 37e0      	CPI  R30,LOW(0x70)
0003a2 f4a1      	BRNE _0x200004E
                 _0x200004D:
0003a3 e020      	LDI  R18,LOW(0)
                 _0x200004A:
0003a4 e010      	LDI  R17,LOW(0)
0003a5 98f0      	CBI  0x1E,0
0003a6 91e0 030b 	LDS  R30,_twi_rx_buffer_size_G100
0003a8 30e0      	CPI  R30,0
0003a9 f431      	BRNE _0x2000051
0003aa e021      	LDI  R18,LOW(1)
0003ab 91e0 00bc 	LDS  R30,188
0003ad 70ef      	ANDI R30,LOW(0xF)
0003ae 68e0      	ORI  R30,0x80
0003af c004      	RJMP _0x2000084
                 _0x2000051:
0003b0 91e0 00bc 	LDS  R30,188
0003b2 70ef      	ANDI R30,LOW(0xF)
0003b3 6ce0      	ORI  R30,LOW(0xC0)
                 _0x2000084:
0003b4 93e0 00bc 	STS  188,R30
0003b6 c0ad      	RJMP _0x2000022
                 _0x200004E:
0003b7 38e0      	CPI  R30,LOW(0x80)
0003b8 f011      	BREQ _0x2000054
0003b9 39e0      	CPI  R30,LOW(0x90)
0003ba f539      	BRNE _0x2000055
                 _0x2000054:
0003bb 9bf0      	SBIS 0x1E,0
0003bc c002      	RJMP _0x2000056
0003bd e021      	LDI  R18,LOW(1)
0003be c09e      	RJMP _0x2000057
                 _0x2000056:
0003bf 91e0 00bb 	LDS  R30,187
0003c1 01da      	MOVW R26,R20
0003c2 93ec      	ST   X,R30
0003c3 5f1f      	SUBI R17,-LOW(1)
0003c4 91e0 030b 	LDS  R30,_twi_rx_buffer_size_G100
0003c6 171e      	CP   R17,R30
0003c7 f4c0      	BRSH _0x2000058
0003c8 91e0 030c 	LDS  R30,_twi_slave_rx_handler_G100
0003ca 91f0 030d 	LDS  R31,_twi_slave_rx_handler_G100+1
0003cc 9730      	SBIW R30,0
0003cd f411      	BRNE _0x2000059
0003ce e026      	LDI  R18,LOW(6)
0003cf c08d      	RJMP _0x2000057
                 _0x2000059:
0003d0 e0a0      	LDI  R26,LOW(0)
                +
0003d1 91e0 030c+LDS R30 , _twi_slave_rx_handler_G100 + ( 0 )
0003d3 91f0 030d+LDS R31 , _twi_slave_rx_handler_G100 + ( 0 ) + 1
0003d5 9509     +ICALL
                 	__CALL1MN _twi_slave_rx_handler_G100,0
0003d6 30e0      	CPI  R30,0
0003d7 f039      	BREQ _0x200005A
0003d8 91e0 00bc 	LDS  R30,188
0003da 70ef      	ANDI R30,LOW(0xF)
0003db 6ce0      	ORI  R30,LOW(0xC0)
0003dc 93e0 00bc 	STS  188,R30
0003de c085      	RJMP _0x2000022
                 _0x200005A:
0003df c001      	RJMP _0x200005B
                 _0x2000058:
0003e0 9af0      	SBI  0x1E,0
                 _0x200005B:
0003e1 c002      	RJMP _0x200005E
                 _0x2000055:
0003e2 38e8      	CPI  R30,LOW(0x88)
0003e3 f409      	BRNE _0x200005F
                 _0x200005E:
0003e4 c002      	RJMP _0x2000060
                 _0x200005F:
0003e5 39e8      	CPI  R30,LOW(0x98)
0003e6 f439      	BRNE _0x2000061
                 _0x2000060:
0003e7 91e0 00bc 	LDS  R30,188
0003e9 70ef      	ANDI R30,LOW(0xF)
0003ea 68e0      	ORI  R30,0x80
0003eb 93e0 00bc 	STS  188,R30
0003ed c076      	RJMP _0x2000022
                 _0x2000061:
0003ee 3ae0      	CPI  R30,LOW(0xA0)
0003ef f4b1      	BRNE _0x2000062
0003f0 91e0 00bc 	LDS  R30,188
0003f2 70ef      	ANDI R30,LOW(0xF)
0003f3 6ce0      	ORI  R30,LOW(0xC0)
0003f4 93e0 00bc 	STS  188,R30
0003f6 9af1      	SBI  0x1E,1
0003f7 91e0 030c 	LDS  R30,_twi_slave_rx_handler_G100
0003f9 91f0 030d 	LDS  R31,_twi_slave_rx_handler_G100+1
0003fb 9730      	SBIW R30,0
0003fc f039      	BREQ _0x2000065
0003fd e0a1      	LDI  R26,LOW(1)
                +
0003fe 91e0 030c+LDS R30 , _twi_slave_rx_handler_G100 + ( 0 )
000400 91f0 030d+LDS R31 , _twi_slave_rx_handler_G100 + ( 0 ) + 1
000402 9509     +ICALL
                 	__CALL1MN _twi_slave_rx_handler_G100,0
000403 c001      	RJMP _0x2000066
                 _0x2000065:
000404 e026      	LDI  R18,LOW(6)
                 _0x2000066:
000405 c05e      	RJMP _0x2000022
                 _0x2000062:
000406 3be0      	CPI  R30,LOW(0xB0)
000407 f411      	BRNE _0x2000067
000408 e022      	LDI  R18,LOW(2)
000409 c002      	RJMP _0x2000068
                 _0x2000067:
00040a 3ae8      	CPI  R30,LOW(0xA8)
00040b f4b1      	BRNE _0x2000069
                 _0x2000068:
00040c 91e0 030e 	LDS  R30,_twi_slave_tx_handler_G100
00040e 91f0 030f 	LDS  R31,_twi_slave_tx_handler_G100+1
000410 9730      	SBIW R30,0
000411 f059      	BREQ _0x200006A
000412 e0a0      	LDI  R26,LOW(0)
                +
000413 91e0 030e+LDS R30 , _twi_slave_tx_handler_G100 + ( 0 )
000415 91f0 030f+LDS R31 , _twi_slave_tx_handler_G100 + ( 0 ) + 1
000417 9509     +ICALL
                 	__CALL1MN _twi_slave_tx_handler_G100,0
000418 2f3e      	MOV  R19,R30
000419 30e0      	CPI  R30,0
00041a f011      	BREQ _0x200006C
00041b e020      	LDI  R18,LOW(0)
00041c c002      	RJMP _0x200006D
                 _0x200006A:
                 _0x200006C:
00041d e026      	LDI  R18,LOW(6)
00041e c03e      	RJMP _0x2000057
                 _0x200006D:
00041f e000      	LDI  R16,LOW(0)
000420 98f0      	CBI  0x1E,0
000421 c002      	RJMP _0x2000070
                 _0x2000069:
000422 3be8      	CPI  R30,LOW(0xB8)
000423 f4f9      	BRNE _0x2000071
                 _0x2000070:
000424 9bf0      	SBIS 0x1E,0
000425 c002      	RJMP _0x2000072
000426 e021      	LDI  R18,LOW(1)
000427 c035      	RJMP _0x2000057
                 _0x2000072:
000428 2fe0      	MOV  R30,R16
000429 5f0f      	SUBI R16,-1
00042a 91a0 0305 	LDS  R26,_twi_tx_buffer_G100
00042c 91b0 0306 	LDS  R27,_twi_tx_buffer_G100+1
00042e e0f0      	LDI  R31,0
00042f 0fae      	ADD  R26,R30
000430 1fbf      	ADC  R27,R31
000431 91ec      	LD   R30,X
000432 93e0 00bb 	STS  187,R30
000434 1703      	CP   R16,R19
000435 f428      	BRSH _0x2000073
000436 91e0 00bc 	LDS  R30,188
000438 70ef      	ANDI R30,LOW(0xF)
000439 6ce0      	ORI  R30,LOW(0xC0)
00043a c005      	RJMP _0x2000085
                 _0x2000073:
00043b 9af0      	SBI  0x1E,0
00043c 91e0 00bc 	LDS  R30,188
00043e 70ef      	ANDI R30,LOW(0xF)
00043f 68e0      	ORI  R30,0x80
                 _0x2000085:
000440 93e0 00bc 	STS  188,R30
000442 c021      	RJMP _0x2000022
                 _0x2000071:
000443 3ce0      	CPI  R30,LOW(0xC0)
000444 f011      	BREQ _0x2000078
000445 3ce8      	CPI  R30,LOW(0xC8)
000446 f499      	BRNE _0x2000079
                 _0x2000078:
000447 91e0 00bc 	LDS  R30,188
000449 70ef      	ANDI R30,LOW(0xF)
00044a 6ce0      	ORI  R30,LOW(0xC0)
00044b 93e0 00bc 	STS  188,R30
00044d 91e0 030e 	LDS  R30,_twi_slave_tx_handler_G100
00044f 91f0 030f 	LDS  R31,_twi_slave_tx_handler_G100+1
000451 9730      	SBIW R30,0
000452 f031      	BREQ _0x200007A
000453 e0a1      	LDI  R26,LOW(1)
                +
000454 91e0 030e+LDS R30 , _twi_slave_tx_handler_G100 + ( 0 )
000456 91f0 030f+LDS R31 , _twi_slave_tx_handler_G100 + ( 0 ) + 1
000458 9509     +ICALL
                 	__CALL1MN _twi_slave_tx_handler_G100,0
                 _0x200007A:
000459 c009      	RJMP _0x2000043
                 _0x2000079:
00045a 30e0      	CPI  R30,0
00045b f441      	BRNE _0x2000022
00045c e023      	LDI  R18,LOW(3)
                 _0x2000057:
                 _0x2000082:
00045d 91e0 00bc 	LDS  R30,188
00045f 70ef      	ANDI R30,LOW(0xF)
000460 6de0      	ORI  R30,LOW(0xD0)
                 _0x2000083:
000461 93e0 00bc 	STS  188,R30
                 _0x2000043:
000463 9af1      	SBI  0x1E,1
                 _0x2000022:
000464 9310 0301 	STS  _twi_rx_index,R17
000466 9300 0300 	STS  _twi_tx_index,R16
000468 9320 0302 	STS  _twi_result,R18
00046a 9330 0307 	STS  _bytes_to_tx_G100,R19
00046c 9109      	LD   R16,Y+
00046d 9119      	LD   R17,Y+
00046e 9129      	LD   R18,Y+
00046f 9139      	LD   R19,Y+
000470 9149      	LD   R20,Y+
000471 9159      	LD   R21,Y+
000472 91e9      	LD   R30,Y+
000473 bfef      	OUT  SREG,R30
000474 91f9      	LD   R31,Y+
000475 91e9      	LD   R30,Y+
000476 91b9      	LD   R27,Y+
000477 91a9      	LD   R26,Y+
000478 9199      	LD   R25,Y+
000479 9189      	LD   R24,Y+
00047a 9179      	LD   R23,Y+
00047b 9169      	LD   R22,Y+
00047c 90f9      	LD   R15,Y+
00047d 9019      	LD   R1,Y+
00047e 9009      	LD   R0,Y+
00047f 9518      	RETI
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_setbit_G101:
                 ; .FSTART __lcd_setbit_G101
000480 d2a3      	RCALL SUBOPT_0xE
000481 91a0 0315 	LDS  R26,_bus_data_G101
000483 d2a7      	RCALL SUBOPT_0xF
000484 c050      	RJMP _0x20C0002
                 ; .FEND
                 __lcd_clrbit_G101:
                 ; .FSTART __lcd_clrbit_G101
000485 d29e      	RCALL SUBOPT_0xE
000486 95e0      	COM  R30
000487 91a0 0315 	LDS  R26,_bus_data_G101
000489 23ea      	AND  R30,R26
00048a d2a5      	RCALL SUBOPT_0x10
00048b c049      	RJMP _0x20C0002
                 ; .FEND
                 __lcd_write_nibble_hi_G101:
                 ; .FSTART __lcd_write_nibble_hi_G101
00048c 931a      	ST   -Y,R17
00048d 2f1a      	MOV  R17,R26
00048e 91e0 0314 	LDS  R30,__pcf8574_addr_G101
000490 93ea      	ST   -Y,R30
000491 91e0 0315 	LDS  R30,_bus_data_G101
000493 70ef      	ANDI R30,LOW(0xF)
000494 2fae      	MOV  R26,R30
000495 2fe1      	MOV  R30,R17
000496 7fe0      	ANDI R30,LOW(0xF0)
000497 d293      	RCALL SUBOPT_0xF
000498 e0a4      	LDI  R26,LOW(4)
000499 dfe6      	RCALL __lcd_setbit_G101
00049a e0a4      	LDI  R26,LOW(4)
00049b c038      	RJMP _0x20C0003
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00049c 93aa      	ST   -Y,R26
00049d 81a8      	LD   R26,Y
00049e dfed      	RCALL __lcd_write_nibble_hi_G101
00049f 81e8          ld    r30,y
0004a0 95e2          swap  r30
0004a1 83e8          st    y,r30
0004a2 81a8      	LD   R26,Y
0004a3 dfe8      	RCALL __lcd_write_nibble_hi_G101
                +
0004a4 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0004a5 958a     +DEC R24
0004a6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0004a7 9621      	ADIW R28,1
0004a8 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0004a9 d1ec      	RCALL SUBOPT_0x1
0004aa 2fe1      	MOV  R30,R17
0004ab e0f0      	LDI  R31,0
0004ac 5fe0      	SUBI R30,LOW(-__base_y_G101)
0004ad 4ffc      	SBCI R31,HIGH(-__base_y_G101)
0004ae 81e0      	LD   R30,Z
0004af 0fe0      	ADD  R30,R16
0004b0 2fae      	MOV  R26,R30
0004b1 dfea      	RCALL __lcd_write_data
0004b2 2ee0      	MOV  R14,R16
0004b3 2ed1      	MOV  R13,R17
0004b4 c049      	RJMP _0x20C0001
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0004b5 e0a2      	LDI  R26,LOW(2)
0004b6 d27d      	RCALL SUBOPT_0x11
0004b7 e0ac      	LDI  R26,LOW(12)
0004b8 dfe3      	RCALL __lcd_write_data
0004b9 e0a1      	LDI  R26,LOW(1)
0004ba d279      	RCALL SUBOPT_0x11
0004bb e0e0      	LDI  R30,LOW(0)
0004bc 2ede      	MOV  R13,R30
0004bd 2eee      	MOV  R14,R30
0004be 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0004bf 931a      	ST   -Y,R17
0004c0 2f1a      	MOV  R17,R26
0004c1 301a      	CPI  R17,10
0004c2 f021      	BREQ _0x2020005
0004c3 91e0 0316 	LDS  R30,__lcd_maxx
0004c5 16ee      	CP   R14,R30
0004c6 f038      	BRLO _0x2020004
                 _0x2020005:
0004c7 e0e0      	LDI  R30,LOW(0)
0004c8 93ea      	ST   -Y,R30
0004c9 94d3      	INC  R13
0004ca 2dad      	MOV  R26,R13
0004cb dfdd      	RCALL _lcd_gotoxy
0004cc 301a      	CPI  R17,10
0004cd f039      	BREQ _0x20C0002
                 _0x2020004:
0004ce 94e3      	INC  R14
0004cf e0a1      	LDI  R26,LOW(1)
0004d0 dfaf      	RCALL __lcd_setbit_G101
0004d1 2fa1      	MOV  R26,R17
0004d2 dfc9      	RCALL __lcd_write_data
0004d3 e0a1      	LDI  R26,LOW(1)
                 _0x20C0003:
0004d4 dfb0      	RCALL __lcd_clrbit_G101
                 _0x20C0002:
0004d5 9119      	LD   R17,Y+
0004d6 9508      	RET
                 ; .FEND
                 _lcd_twi_init:
                 ; .FSTART _lcd_twi_init
0004d7 d1be      	RCALL SUBOPT_0x1
0004d8 9300 0314 	STS  __pcf8574_addr_G101,R16
0004da 91e0 0314 	LDS  R30,__pcf8574_addr_G101
0004dc 93ea      	ST   -Y,R30
0004dd e0e8      	LDI  R30,LOW(8)
0004de d251      	RCALL SUBOPT_0x10
0004df 9310 0316 	STS  __lcd_maxx,R17
0004e1 2fe1      	MOV  R30,R17
0004e2 58e0      	SUBI R30,-LOW(128)
                +
0004e3 93e0 0312+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0004e5 2fe1      	MOV  R30,R17
0004e6 54e0      	SUBI R30,-LOW(192)
                +
0004e7 93e0 0313+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0004e9 e1a4      	LDI  R26,LOW(20)
0004ea e0b0      	LDI  R27,0
0004eb d2f4      	RCALL _delay_ms
0004ec d24b      	RCALL SUBOPT_0x12
0004ed d24a      	RCALL SUBOPT_0x12
0004ee d249      	RCALL SUBOPT_0x12
0004ef e2a0      	LDI  R26,LOW(32)
0004f0 df9b      	RCALL __lcd_write_nibble_hi_G101
                +
0004f1 ec88     +LDI R24 , LOW ( 200 )
0004f2 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0004f3 9701     +SBIW R24 , 1
0004f4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0004f5 e2a8      	LDI  R26,LOW(40)
0004f6 dfa5      	RCALL __lcd_write_data
0004f7 e0a4      	LDI  R26,LOW(4)
0004f8 dfa3      	RCALL __lcd_write_data
0004f9 e8a5      	LDI  R26,LOW(133)
0004fa dfa1      	RCALL __lcd_write_data
0004fb e0a6      	LDI  R26,LOW(6)
0004fc df9f      	RCALL __lcd_write_data
0004fd dfb7      	RCALL _lcd_clear
                 _0x20C0001:
0004fe 8119      	LDD  R17,Y+1
0004ff 8108      	LDD  R16,Y+0
000500 9623      	ADIW R28,3
000501 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000502 93ba      	ST   -Y,R27
000503 93aa      	ST   -Y,R26
000504 91a9          ld   r26,y+
000505 91b9          ld   r27,y+
000506 27ee          clr  r30
000507 27ff          clr  r31
                 strlen0:
000508 916d          ld   r22,x+
000509 2366          tst  r22
00050a f011          breq strlen1
00050b 9631          adiw r30,1
00050c cffb          rjmp strlen0
                 strlen1:
00050d 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00050e 93ba      	ST   -Y,R27
00050f 93aa      	ST   -Y,R26
000510 27aa          clr  r26
000511 27bb          clr  r27
000512 91e9          ld   r30,y+
000513 91f9          ld   r31,y+
                 strlenf0:
000514 9005      	lpm  r0,z+
000515 2000          tst  r0
000516 f011          breq strlenf1
000517 9611          adiw r26,1
000518 cffb          rjmp strlenf0
                 strlenf1:
000519 01fd          movw r30,r26
00051a 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _pcf8574_write:
                 ; .FSTART _pcf8574_write
00051b 93aa      	ST   -Y,R26
00051c 81e9      	LDD  R30,Y+1
00051d 93ea      	ST   -Y,R30
00051e 01fe      	MOVW R30,R28
00051f 9631      	ADIW R30,1
000520 93fa      	ST   -Y,R31
000521 93ea      	ST   -Y,R30
000522 e0e1      	LDI  R30,LOW(1)
000523 93ea      	ST   -Y,R30
000524 e0e0      	LDI  R30,LOW(0)
000525 e0f0      	LDI  R31,HIGH(0)
000526 93fa      	ST   -Y,R31
000527 93ea      	ST   -Y,R30
000528 e0a0      	LDI  R26,LOW(0)
000529 dd6d      	RCALL _twi_master_trans
00052a 9622      	ADIW R28,2
00052b 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 __print_G104:
                 ; .FSTART __print_G104
00052c 93ba      	ST   -Y,R27
00052d 93aa      	ST   -Y,R26
00052e 9726      	SBIW R28,6
00052f d22c      	RCALL __SAVELOCR6
000530 e010      	LDI  R17,0
000531 85ac      	LDD  R26,Y+12
000532 85bd      	LDD  R27,Y+12+1
000533 e0e0      	LDI  R30,LOW(0)
000534 e0f0      	LDI  R31,HIGH(0)
000535 93ed      	ST   X+,R30
000536 93fc      	ST   X,R31
                 _0x208001C:
000537 89ea      	LDD  R30,Y+18
000538 89fb      	LDD  R31,Y+18+1
000539 9631      	ADIW R30,1
00053a 8bea      	STD  Y+18,R30
00053b 8bfb      	STD  Y+18+1,R31
00053c 9731      	SBIW R30,1
00053d 91e4      	LPM  R30,Z
00053e 2f2e      	MOV  R18,R30
00053f 30e0      	CPI  R30,0
000540 f409      	BRNE PC+2
000541 c10b      	RJMP _0x208001E
000542 2fe1      	MOV  R30,R17
000543 30e0      	CPI  R30,0
000544 f431      	BRNE _0x2080022
000545 3225      	CPI  R18,37
000546 f411      	BRNE _0x2080023
000547 e011      	LDI  R17,LOW(1)
000548 c001      	RJMP _0x2080024
                 _0x2080023:
000549 d1f5      	RCALL SUBOPT_0x13
                 _0x2080024:
00054a c101      	RJMP _0x2080021
                 _0x2080022:
00054b 30e1      	CPI  R30,LOW(0x1)
00054c f4a1      	BRNE _0x2080025
00054d 3225      	CPI  R18,37
00054e f411      	BRNE _0x2080026
00054f d1ef      	RCALL SUBOPT_0x13
000550 c0fa      	RJMP _0x20800D2
                 _0x2080026:
000551 e012      	LDI  R17,LOW(2)
000552 e040      	LDI  R20,LOW(0)
000553 e000      	LDI  R16,LOW(0)
000554 322d      	CPI  R18,45
000555 f411      	BRNE _0x2080027
000556 e001      	LDI  R16,LOW(1)
000557 c0f4      	RJMP _0x2080021
                 _0x2080027:
000558 322b      	CPI  R18,43
000559 f411      	BRNE _0x2080028
00055a e24b      	LDI  R20,LOW(43)
00055b c0f0      	RJMP _0x2080021
                 _0x2080028:
00055c 3220      	CPI  R18,32
00055d f411      	BRNE _0x2080029
00055e e240      	LDI  R20,LOW(32)
00055f c0ec      	RJMP _0x2080021
                 _0x2080029:
000560 c002      	RJMP _0x208002A
                 _0x2080025:
000561 30e2      	CPI  R30,LOW(0x2)
000562 f439      	BRNE _0x208002B
                 _0x208002A:
000563 e050      	LDI  R21,LOW(0)
000564 e013      	LDI  R17,LOW(3)
000565 3320      	CPI  R18,48
000566 f411      	BRNE _0x208002C
000567 6800      	ORI  R16,LOW(128)
000568 c0e3      	RJMP _0x2080021
                 _0x208002C:
000569 c003      	RJMP _0x208002D
                 _0x208002B:
00056a 30e3      	CPI  R30,LOW(0x3)
00056b f009      	BREQ PC+2
00056c c0df      	RJMP _0x2080021
                 _0x208002D:
00056d 3320      	CPI  R18,48
00056e f010      	BRLO _0x2080030
00056f 332a      	CPI  R18,58
000570 f008      	BRLO _0x2080031
                 _0x2080030:
000571 c007      	RJMP _0x208002F
                 _0x2080031:
000572 e0aa      	LDI  R26,LOW(10)
000573 9f5a      	MUL  R21,R26
000574 2d50      	MOV  R21,R0
000575 2fe2      	MOV  R30,R18
000576 53e0      	SUBI R30,LOW(48)
000577 0f5e      	ADD  R21,R30
000578 c0d3      	RJMP _0x2080021
                 _0x208002F:
000579 2fe2      	MOV  R30,R18
00057a 36e3      	CPI  R30,LOW(0x63)
00057b f439      	BRNE _0x2080035
00057c d1c9      	RCALL SUBOPT_0x14
00057d 89e8      	LDD  R30,Y+16
00057e 89f9      	LDD  R31,Y+16+1
00057f 81a4      	LDD  R26,Z+4
000580 93aa      	ST   -Y,R26
000581 d1ca      	RCALL SUBOPT_0x15
000582 c0c8      	RJMP _0x2080036
                 _0x2080035:
000583 37e3      	CPI  R30,LOW(0x73)
000584 f429      	BRNE _0x2080038
000585 d1c0      	RCALL SUBOPT_0x14
000586 d1cb      	RCALL SUBOPT_0x16
000587 df7a      	RCALL _strlen
000588 2f1e      	MOV  R17,R30
000589 c007      	RJMP _0x2080039
                 _0x2080038:
00058a 37e0      	CPI  R30,LOW(0x70)
00058b f449      	BRNE _0x208003B
00058c d1b9      	RCALL SUBOPT_0x14
00058d d1c4      	RCALL SUBOPT_0x16
00058e df7f      	RCALL _strlenf
00058f 2f1e      	MOV  R17,R30
000590 6008      	ORI  R16,LOW(8)
                 _0x2080039:
000591 6002      	ORI  R16,LOW(2)
000592 770f      	ANDI R16,LOW(127)
000593 e030      	LDI  R19,LOW(0)
000594 c03a      	RJMP _0x208003C
                 _0x208003B:
000595 36e4      	CPI  R30,LOW(0x64)
000596 f011      	BREQ _0x208003F
000597 36e9      	CPI  R30,LOW(0x69)
000598 f411      	BRNE _0x2080040
                 _0x208003F:
000599 6004      	ORI  R16,LOW(4)
00059a c002      	RJMP _0x2080041
                 _0x2080040:
00059b 37e5      	CPI  R30,LOW(0x75)
00059c f431      	BRNE _0x2080042
                 _0x2080041:
00059d e6e8      	LDI  R30,LOW(_tbl10_G104*2)
00059e e0f0      	LDI  R31,HIGH(_tbl10_G104*2)
00059f 83ee      	STD  Y+6,R30
0005a0 83ff      	STD  Y+6+1,R31
0005a1 e015      	LDI  R17,LOW(5)
0005a2 c00c      	RJMP _0x2080043
                 _0x2080042:
0005a3 35e8      	CPI  R30,LOW(0x58)
0005a4 f411      	BRNE _0x2080045
0005a5 6008      	ORI  R16,LOW(8)
0005a6 c003      	RJMP _0x2080046
                 _0x2080045:
0005a7 37e8      	CPI  R30,LOW(0x78)
0005a8 f009      	BREQ PC+2
0005a9 c0a1      	RJMP _0x2080077
                 _0x2080046:
0005aa e7e2      	LDI  R30,LOW(_tbl16_G104*2)
0005ab e0f0      	LDI  R31,HIGH(_tbl16_G104*2)
0005ac 83ee      	STD  Y+6,R30
0005ad 83ff      	STD  Y+6+1,R31
0005ae e014      	LDI  R17,LOW(4)
                 _0x2080043:
0005af ff02      	SBRS R16,2
0005b0 c015      	RJMP _0x2080048
0005b1 d194      	RCALL SUBOPT_0x14
0005b2 89a8      	LDD  R26,Y+16
0005b3 89b9      	LDD  R27,Y+16+1
0005b4 9614      	ADIW R26,4
0005b5 91ed      	LD   R30,X+
0005b6 91fd      	LD   R31,X+
0005b7 87ea      	STD  Y+10,R30
0005b8 87fb      	STD  Y+10+1,R31
0005b9 85ab      	LDD  R26,Y+11
0005ba 23aa      	TST  R26
0005bb f422      	BRPL _0x2080049
0005bc d1ad      	RCALL __ANEGW1
0005bd 87ea      	STD  Y+10,R30
0005be 87fb      	STD  Y+10+1,R31
0005bf e24d      	LDI  R20,LOW(45)
                 _0x2080049:
0005c0 3040      	CPI  R20,0
0005c1 f011      	BREQ _0x208004A
0005c2 5f1f      	SUBI R17,-LOW(1)
0005c3 c001      	RJMP _0x208004B
                 _0x208004A:
0005c4 7f0b      	ANDI R16,LOW(251)
                 _0x208004B:
0005c5 c009      	RJMP _0x208004C
                 _0x2080048:
0005c6 d17f      	RCALL SUBOPT_0x14
0005c7 89a8      	LDD  R26,Y+16
0005c8 89b9      	LDD  R27,Y+16+1
0005c9 9614      	ADIW R26,4
                +
0005ca 91ed     +LD R30 , X +
0005cb 91fc     +LD R31 , X
0005cc 9711     +SBIW R26 , 1
                 	__GETW1P
0005cd 87ea      	STD  Y+10,R30
0005ce 87fb      	STD  Y+10+1,R31
                 _0x208004C:
                 _0x208003C:
0005cf fd00      	SBRC R16,0
0005d0 c010      	RJMP _0x208004D
                 _0x208004E:
0005d1 1715      	CP   R17,R21
0005d2 f470      	BRSH _0x2080050
0005d3 ff07      	SBRS R16,7
0005d4 c008      	RJMP _0x2080051
0005d5 ff02      	SBRS R16,2
0005d6 c004      	RJMP _0x2080052
0005d7 7f0b      	ANDI R16,LOW(251)
0005d8 2f24      	MOV  R18,R20
0005d9 5011      	SUBI R17,LOW(1)
0005da c001      	RJMP _0x2080053
                 _0x2080052:
0005db e320      	LDI  R18,LOW(48)
                 _0x2080053:
0005dc c001      	RJMP _0x2080054
                 _0x2080051:
0005dd e220      	LDI  R18,LOW(32)
                 _0x2080054:
0005de d160      	RCALL SUBOPT_0x13
0005df 5051      	SUBI R21,LOW(1)
0005e0 cff0      	RJMP _0x208004E
                 _0x2080050:
                 _0x208004D:
0005e1 2f31      	MOV  R19,R17
0005e2 ff01      	SBRS R16,1
0005e3 c016      	RJMP _0x2080055
                 _0x2080056:
0005e4 3030      	CPI  R19,0
0005e5 f099      	BREQ _0x2080058
0005e6 ff03      	SBRS R16,3
0005e7 c006      	RJMP _0x2080059
0005e8 81ee      	LDD  R30,Y+6
0005e9 81ff      	LDD  R31,Y+6+1
0005ea 9125      	LPM  R18,Z+
0005eb 83ee      	STD  Y+6,R30
0005ec 83ff      	STD  Y+6+1,R31
0005ed c005      	RJMP _0x208005A
                 _0x2080059:
0005ee 81ae      	LDD  R26,Y+6
0005ef 81bf      	LDD  R27,Y+6+1
0005f0 912d      	LD   R18,X+
0005f1 83ae      	STD  Y+6,R26
0005f2 83bf      	STD  Y+6+1,R27
                 _0x208005A:
0005f3 d14b      	RCALL SUBOPT_0x13
0005f4 3050      	CPI  R21,0
0005f5 f009      	BREQ _0x208005B
0005f6 5051      	SUBI R21,LOW(1)
                 _0x208005B:
0005f7 5031      	SUBI R19,LOW(1)
0005f8 cfeb      	RJMP _0x2080056
                 _0x2080058:
0005f9 c048      	RJMP _0x208005C
                 _0x2080055:
                 _0x208005E:
0005fa e320      	LDI  R18,LOW(48)
0005fb 81ee      	LDD  R30,Y+6
0005fc 81ff      	LDD  R31,Y+6+1
0005fd d1d9      	RCALL __GETW1PF
0005fe 87e8      	STD  Y+8,R30
0005ff 87f9      	STD  Y+8+1,R31
000600 81ee      	LDD  R30,Y+6
000601 81ff      	LDD  R31,Y+6+1
000602 9632      	ADIW R30,2
000603 83ee      	STD  Y+6,R30
000604 83ff      	STD  Y+6+1,R31
                 _0x2080060:
000605 85e8      	LDD  R30,Y+8
000606 85f9      	LDD  R31,Y+8+1
000607 85aa      	LDD  R26,Y+10
000608 85bb      	LDD  R27,Y+10+1
000609 17ae      	CP   R26,R30
00060a 07bf      	CPC  R27,R31
00060b f050      	BRLO _0x2080062
00060c 5f2f      	SUBI R18,-LOW(1)
00060d 85a8      	LDD  R26,Y+8
00060e 85b9      	LDD  R27,Y+8+1
00060f 85ea      	LDD  R30,Y+10
000610 85fb      	LDD  R31,Y+10+1
000611 1bea      	SUB  R30,R26
000612 0bfb      	SBC  R31,R27
000613 87ea      	STD  Y+10,R30
000614 87fb      	STD  Y+10+1,R31
000615 cfef      	RJMP _0x2080060
                 _0x2080062:
000616 332a      	CPI  R18,58
000617 f028      	BRLO _0x2080063
000618 ff03      	SBRS R16,3
000619 c002      	RJMP _0x2080064
00061a 5f29      	SUBI R18,-LOW(7)
00061b c001      	RJMP _0x2080065
                 _0x2080064:
00061c 5d29      	SUBI R18,-LOW(39)
                 _0x2080065:
                 _0x2080063:
00061d fd04      	SBRC R16,4
00061e c019      	RJMP _0x2080067
00061f 3321      	CPI  R18,49
000620 f420      	BRSH _0x2080069
000621 85a8      	LDD  R26,Y+8
000622 85b9      	LDD  R27,Y+8+1
000623 9711      	SBIW R26,1
000624 f409      	BRNE _0x2080068
                 _0x2080069:
000625 c009      	RJMP _0x20800D3
                 _0x2080068:
000626 1753      	CP   R21,R19
000627 f010      	BRLO _0x208006D
000628 ff00      	SBRS R16,0
000629 c001      	RJMP _0x208006E
                 _0x208006D:
00062a c011      	RJMP _0x208006C
                 _0x208006E:
00062b e220      	LDI  R18,LOW(32)
00062c ff07      	SBRS R16,7
00062d c00a      	RJMP _0x208006F
00062e e320      	LDI  R18,LOW(48)
                 _0x20800D3:
00062f 6100      	ORI  R16,LOW(16)
000630 ff02      	SBRS R16,2
000631 c006      	RJMP _0x2080070
000632 7f0b      	ANDI R16,LOW(251)
000633 934a      	ST   -Y,R20
000634 d117      	RCALL SUBOPT_0x15
000635 3050      	CPI  R21,0
000636 f009      	BREQ _0x2080071
000637 5051      	SUBI R21,LOW(1)
                 _0x2080071:
                 _0x2080070:
                 _0x208006F:
                 _0x2080067:
000638 d106      	RCALL SUBOPT_0x13
000639 3050      	CPI  R21,0
00063a f009      	BREQ _0x2080072
00063b 5051      	SUBI R21,LOW(1)
                 _0x2080072:
                 _0x208006C:
00063c 5031      	SUBI R19,LOW(1)
00063d 85a8      	LDD  R26,Y+8
00063e 85b9      	LDD  R27,Y+8+1
00063f 9712      	SBIW R26,2
000640 f008      	BRLO _0x208005F
000641 cfb8      	RJMP _0x208005E
                 _0x208005F:
                 _0x208005C:
000642 ff00      	SBRS R16,0
000643 c007      	RJMP _0x2080073
                 _0x2080074:
000644 3050      	CPI  R21,0
000645 f029      	BREQ _0x2080076
000646 5051      	SUBI R21,LOW(1)
000647 e2e0      	LDI  R30,LOW(32)
000648 93ea      	ST   -Y,R30
000649 d102      	RCALL SUBOPT_0x15
00064a cff9      	RJMP _0x2080074
                 _0x2080076:
                 _0x2080073:
                 _0x2080077:
                 _0x2080036:
                 _0x20800D2:
00064b e010      	LDI  R17,LOW(0)
                 _0x2080021:
00064c ceea      	RJMP _0x208001C
                 _0x208001E:
00064d 85ac      	LDD  R26,Y+12
00064e 85bd      	LDD  R27,Y+12+1
00064f 91ed      	LD   R30,X+
000650 91fd      	LD   R31,X+
000651 d111      	RCALL __LOADLOCR6
000652 9664      	ADIW R28,20
000653 9508      	RET
                 ; .FEND
                 _put_lcd_G104:
                 ; .FSTART _put_lcd_G104
000654 d109      	RCALL __SAVELOCR4
000655 018d      	MOVW R16,R26
000656 813c      	LDD  R19,Y+4
000657 2fa3      	MOV  R26,R19
000658 de66      	RCALL _lcd_putchar
000659 01d8      	MOVW R26,R16
00065a 91ed      	LD   R30,X+
00065b 91fd      	LD   R31,X+
00065c 9631      	ADIW R30,1
00065d 93fe      	ST   -X,R31
00065e 93ee      	ST   -X,R30
00065f d105      	RCALL __LOADLOCR4
000660 9625      	ADIW R28,5
000661 9508      	RET
                 ; .FEND
                 _lcd_printfxy:
                 ; .FSTART _lcd_printfxy
000662 92ff      	PUSH R15
000663 2ef8      	MOV  R15,R24
000664 9726      	SBIW R28,6
000665 d0f8      	RCALL __SAVELOCR4
000666 01fe      	MOVW R30,R28
                +
000667 2400     +CLR R0
000668 0def     +ADD R30 , R15
000669 1df0     +ADC R31 , R0
                 	__ADDW1R15
00066a 8534      	LDD  R19,Z+12
00066b 8525      	LDD  R18,Z+13
00066c 01de      	MOVW R26,R28
00066d 9616      	ADIW R26,6
                +
00066e 2400     +CLR R0
00066f 0daf     +ADD R26 , R15
000670 1db0     +ADC R27 , R0
                 	__ADDW2R15
000671 018d      	MOVW R16,R26
000672 e0e0      	LDI  R30,LOW(0)
000673 83ee      	STD  Y+6,R30
000674 83ef      	STD  Y+6+1,R30
000675 87e8      	STD  Y+8,R30
000676 87e9      	STD  Y+8+1,R30
000677 932a      	ST   -Y,R18
000678 2fa3      	MOV  R26,R19
000679 de2f      	RCALL _lcd_gotoxy
00067a 01de      	MOVW R26,R28
00067b 961a      	ADIW R26,10
                +
00067c 2400     +CLR R0
00067d 0daf     +ADD R26 , R15
00067e 1db0     +ADC R27 , R0
                 	__ADDW2R15
00067f 91ed      	LD   R30,X+
000680 91fd      	LD   R31,X+
000681 93fa      	ST   -Y,R31
000682 93ea      	ST   -Y,R30
000683 931a      	ST   -Y,R17
000684 930a      	ST   -Y,R16
000685 e5e4      	LDI  R30,LOW(_put_lcd_G104)
000686 e0f6      	LDI  R31,HIGH(_put_lcd_G104)
000687 93fa      	ST   -Y,R31
000688 93ea      	ST   -Y,R30
000689 01de      	MOVW R26,R28
00068a 961a      	ADIW R26,10
00068b dea0      	RCALL __print_G104
00068c d0d8      	RCALL __LOADLOCR4
00068d 962a      	ADIW R28,10
00068e 90ff      	POP  R15
00068f 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.DSEG
                 _twi_tx_index:
000300           	.BYTE 0x1
                 _twi_rx_index:
000301           	.BYTE 0x1
                 _twi_result:
000302           	.BYTE 0x1
                 _regit:
000303           	.BYTE 0x1
                 _slave_address_G100:
000304           	.BYTE 0x1
                 _twi_tx_buffer_G100:
000305           	.BYTE 0x2
                 _bytes_to_tx_G100:
000307           	.BYTE 0x1
                 _twi_rx_buffer_G100:
000308           	.BYTE 0x2
                 _bytes_to_rx_G100:
00030a           	.BYTE 0x1
                 _twi_rx_buffer_size_G100:
00030b           	.BYTE 0x1
                 _twi_slave_rx_handler_G100:
00030c           	.BYTE 0x2
                 _twi_slave_tx_handler_G100:
00030e           	.BYTE 0x2
                 __base_y_G101:
000310           	.BYTE 0x4
                 __pcf8574_addr_G101:
000314           	.BYTE 0x1
                 _bus_data_G101:
000315           	.BYTE 0x1
                 __lcd_maxx:
000316           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
000690 91e0 00b9 	LDS  R30,185
000692 7fec      	ANDI R30,LOW(0xFC)
000693 93e0 00b9 	STS  185,R30
000695 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1:
000696 931a      	ST   -Y,R17
000697 930a      	ST   -Y,R16
000698 2f1a      	MOV  R17,R26
000699 810a      	LDD  R16,Y+2
00069a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
00069b d0c0      	RCALL __SAVELOCR6
00069c 018d      	MOVW R16,R26
                +
00069d 812e     +LDD R18 , Y + 6
00069e 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
00069f 8558      	LDD  R21,Y+8
0006a0 da26      	RCALL _TWI_Interupt_Disable
0006a1 da29      	RCALL _TWI_Start
0006a2 30e8      	CPI  R30,LOW(0x8)
0006a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
0006a4 93e0 0081 	STS  129,R30
0006a6 91e0 0080 	LDS  R30,128
0006a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0006a9 93e0 0080 	STS  128,R30
0006ab 91e0 0081 	LDS  R30,129
0006ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x5:
0006ae 920a      	ST   -Y,R0
0006af 921a      	ST   -Y,R1
0006b0 92fa      	ST   -Y,R15
0006b1 936a      	ST   -Y,R22
0006b2 937a      	ST   -Y,R23
0006b3 938a      	ST   -Y,R24
0006b4 939a      	ST   -Y,R25
0006b5 93aa      	ST   -Y,R26
0006b6 93ba      	ST   -Y,R27
0006b7 93ea      	ST   -Y,R30
0006b8 93fa      	ST   -Y,R31
0006b9 b7ef      	IN   R30,SREG
0006ba 93ea      	ST   -Y,R30
0006bb e0e1      	LDI  R30,LOW(1)
0006bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
0006bd e0e1      	LDI  R30,LOW(1)
0006be e0f0      	LDI  R31,HIGH(1)
                +
0006bf 2ebe     +MOV R11 , R30
0006c0 2ecf     +MOV R12 , R31
                 	__PUTW1R 11,12
0006c1 eba4      	LDI  R26,LOW(180)
0006c2 e0b0      	LDI  R27,0
0006c3 caca      	RJMP _servo_set_angle
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x7:
0006c4 ddf0      	RCALL _lcd_clear
0006c5 e0e0      	LDI  R30,LOW(0)
0006c6 93ea      	ST   -Y,R30
0006c7 93ea      	ST   -Y,R30
0006c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x8:
0006c9 93fa      	ST   -Y,R31
0006ca 93ea      	ST   -Y,R30
0006cb e080      	LDI  R24,0
0006cc df95      	RCALL _lcd_printfxy
0006cd 9624      	ADIW R28,4
0006ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
0006cf 2fe1      	MOV  R30,R17
0006d0 e0f0      	LDI  R31,0
0006d1 01de      	MOVW R26,R28
0006d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0xA:
0006d3 e0e0      	LDI  R30,LOW(0)
0006d4 93ea      	ST   -Y,R30
0006d5 e0e1      	LDI  R30,LOW(1)
0006d6 93ea      	ST   -Y,R30
                +
0006d7 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 12 ) )
0006d8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW1FN _0x0,12
0006d9 93fa      	ST   -Y,R31
0006da 93ea      	ST   -Y,R30
0006db 81ee      	LDD  R30,Y+6
0006dc 27ff      	CLR  R31
0006dd 2766      	CLR  R22
0006de 2777      	CLR  R23
0006df d0fb      	RCALL __PUTPARD1
0006e0 85e9      	LDD  R30,Y+9
0006e1 27ff      	CLR  R31
0006e2 2766      	CLR  R22
0006e3 2777      	CLR  R23
0006e4 d0f6      	RCALL __PUTPARD1
0006e5 85ec      	LDD  R30,Y+12
0006e6 27ff      	CLR  R31
0006e7 2766      	CLR  R22
0006e8 2777      	CLR  R23
0006e9 d0f1      	RCALL __PUTPARD1
0006ea e08c      	LDI  R24,12
0006eb df76      	RCALL _lcd_printfxy
0006ec 9660      	ADIW R28,16
0006ed e0e6      	LDI  R30,LOW(6)
0006ee 93ea      	ST   -Y,R30
0006ef e0e1      	LDI  R30,LOW(1)
0006f0 93ea      	ST   -Y,R30
                +
0006f1 e9e8     +LDI R30 , LOW ( 2 * _0x0 + ( 22 ) )
0006f2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 22 ) )
                 	__POINTW1FN _0x0,22
0006f3 93fa      	ST   -Y,R31
0006f4 93ea      	ST   -Y,R30
0006f5 85e8      	LDD  R30,Y+8
0006f6 27ff      	CLR  R31
0006f7 2766      	CLR  R22
0006f8 2777      	CLR  R23
0006f9 d0e1      	RCALL __PUTPARD1
0006fa 85ed      	LDD  R30,Y+13
0006fb 27ff      	CLR  R31
0006fc 2766      	CLR  R22
0006fd 2777      	CLR  R23
0006fe d0dc      	RCALL __PUTPARD1
0006ff 89ea      	LDD  R30,Y+18
000700 27ff      	CLR  R31
000701 2766      	CLR  R22
000702 2777      	CLR  R23
000703 d0d7      	RCALL __PUTPARD1
000704 e08c      	LDI  R24,12
000705 df5c      	RCALL _lcd_printfxy
000706 9660      	ADIW R28,16
000707 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xB:
000708 e0ec      	LDI  R30,LOW(12)
000709 93ea      	ST   -Y,R30
00070a e0e0      	LDI  R30,LOW(0)
00070b 93ea      	ST   -Y,R30
                +
00070c ebe3     +LDI R30 , LOW ( 2 * _0x0 + ( 49 ) )
00070d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 49 ) )
                 	__POINTW1FN _0x0,49
00070e 93fa      	ST   -Y,R31
00070f 93ea      	ST   -Y,R30
                +
000710 2de9     +MOV R30 , R9
000711 2dfa     +MOV R31 , R10
                 	__GETW1R 9,10
000712 2766      	CLR  R22
000713 2777      	CLR  R23
000714 d0c6      	RCALL __PUTPARD1
000715 e084      	LDI  R24,4
000716 df4b      	RCALL _lcd_printfxy
000717 9628      	ADIW R28,8
000718 2488      	CLR  R8
000719 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC:
00071a e0e9      	LDI  R30,LOW(9)
00071b e0f0      	LDI  R31,HIGH(9)
00071c 15e9      	CP   R30,R9
00071d 05fa      	CPC  R31,R10
00071e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
                +
00071f 83ee     +STD Y + 6 , R30
000720 83ff     +STD Y + 6 + 1 , R31
000721 8768     +STD Y + 6 + 2 , R22
000722 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
000723 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
000724 931a      	ST   -Y,R17
000725 2f1a      	MOV  R17,R26
000726 91e0 0314 	LDS  R30,__pcf8574_addr_G101
000728 93ea      	ST   -Y,R30
000729 2fe1      	MOV  R30,R17
00072a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF:
00072b 2bea      	OR   R30,R26
00072c 93e0 0315 	STS  _bus_data_G101,R30
00072e 2fae      	MOV  R26,R30
00072f cdeb      	RJMP _pcf8574_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x10:
000730 93e0 0315 	STS  _bus_data_G101,R30
000732 2fae      	MOV  R26,R30
000733 cde7      	RJMP _pcf8574_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
000734 dd67      	RCALL __lcd_write_data
000735 e0a3      	LDI  R26,LOW(3)
000736 e0b0      	LDI  R27,0
000737 c0a8      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x12:
000738 e3a0      	LDI  R26,LOW(48)
000739 dd52      	RCALL __lcd_write_nibble_hi_G101
                +
00073a ec88     +LDI R24 , LOW ( 200 )
00073b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00073c 9701     +SBIW R24 , 1
00073d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00073e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x13:
00073f 932a      	ST   -Y,R18
000740 85ad      	LDD  R26,Y+13
000741 85be      	LDD  R27,Y+13+1
000742 85ef      	LDD  R30,Y+15
000743 89f8      	LDD  R31,Y+15+1
000744 9509      	ICALL
000745 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x14:
000746 89e8      	LDD  R30,Y+16
000747 89f9      	LDD  R31,Y+16+1
000748 9734      	SBIW R30,4
000749 8be8      	STD  Y+16,R30
00074a 8bf9      	STD  Y+16+1,R31
00074b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x15:
00074c 85ad      	LDD  R26,Y+13
00074d 85be      	LDD  R27,Y+13+1
00074e 85ef      	LDD  R30,Y+15
00074f 89f8      	LDD  R31,Y+15+1
000750 9509      	ICALL
000751 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x16:
000752 89a8      	LDD  R26,Y+16
000753 89b9      	LDD  R27,Y+16+1
000754 9614      	ADIW R26,4
000755 91ed      	LD   R30,X+
000756 91fd      	LD   R31,X+
000757 83ee      	STD  Y+6,R30
000758 83ff      	STD  Y+6+1,R31
000759 81ae      	LDD  R26,Y+6
00075a 81bf      	LDD  R27,Y+6+1
00075b 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00075c 935a      	ST   -Y,R21
                 __SAVELOCR5:
00075d 934a      	ST   -Y,R20
                 __SAVELOCR4:
00075e 933a      	ST   -Y,R19
                 __SAVELOCR3:
00075f 932a      	ST   -Y,R18
                 __SAVELOCR2:
000760 931a      	ST   -Y,R17
000761 930a      	ST   -Y,R16
000762 9508      	RET
                 
                 __LOADLOCR6:
000763 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000764 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000765 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000766 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000767 8119      	LDD  R17,Y+1
000768 8108      	LD   R16,Y
000769 9508      	RET
                 
                 __ANEGW1:
00076a 95f1      	NEG  R31
00076b 95e1      	NEG  R30
00076c 40f0      	SBCI R31,0
00076d 9508      	RET
                 
                 __ANEGD1:
00076e 95f0      	COM  R31
00076f 9560      	COM  R22
000770 9570      	COM  R23
000771 95e1      	NEG  R30
000772 4fff      	SBCI R31,-1
000773 4f6f      	SBCI R22,-1
000774 4f7f      	SBCI R23,-1
000775 9508      	RET
                 
                 __ANEGD2:
000776 95b0      	COM  R27
000777 9580      	COM  R24
000778 9590      	COM  R25
000779 95a1      	NEG  R26
00077a 4fbf      	SBCI R27,-1
00077b 4f8f      	SBCI R24,-1
00077c 4f9f      	SBCI R25,-1
00077d 9508      	RET
                 
                 __LSRW4:
00077e 95f6      	LSR  R31
00077f 95e7      	ROR  R30
                 __LSRW3:
000780 95f6      	LSR  R31
000781 95e7      	ROR  R30
                 __LSRW2:
000782 95f6      	LSR  R31
000783 95e7      	ROR  R30
000784 95f6      	LSR  R31
000785 95e7      	ROR  R30
000786 9508      	RET
                 
                 __MULW12U:
000787 9ffa      	MUL  R31,R26
000788 2df0      	MOV  R31,R0
000789 9feb      	MUL  R30,R27
00078a 0df0      	ADD  R31,R0
00078b 9fea      	MUL  R30,R26
00078c 2de0      	MOV  R30,R0
00078d 0df1      	ADD  R31,R1
00078e 9508      	RET
                 
                 __DIVW21U:
00078f 2400      	CLR  R0
000790 2411      	CLR  R1
000791 e190      	LDI  R25,16
                 __DIVW21U1:
000792 0faa      	LSL  R26
000793 1fbb      	ROL  R27
000794 1c00      	ROL  R0
000795 1c11      	ROL  R1
000796 1a0e      	SUB  R0,R30
000797 0a1f      	SBC  R1,R31
000798 f418      	BRCC __DIVW21U2
000799 0e0e      	ADD  R0,R30
00079a 1e1f      	ADC  R1,R31
00079b c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00079c 60a1      	SBR  R26,1
                 __DIVW21U3:
00079d 959a      	DEC  R25
00079e f799      	BRNE __DIVW21U1
00079f 01fd      	MOVW R30,R26
0007a0 01d0      	MOVW R26,R0
0007a1 9508      	RET
                 
                 __DIVD21U:
0007a2 933f      	PUSH R19
0007a3 934f      	PUSH R20
0007a4 935f      	PUSH R21
0007a5 2400      	CLR  R0
0007a6 2411      	CLR  R1
0007a7 01a0      	MOVW R20,R0
0007a8 e230      	LDI  R19,32
                 __DIVD21U1:
0007a9 0faa      	LSL  R26
0007aa 1fbb      	ROL  R27
0007ab 1f88      	ROL  R24
0007ac 1f99      	ROL  R25
0007ad 1c00      	ROL  R0
0007ae 1c11      	ROL  R1
0007af 1f44      	ROL  R20
0007b0 1f55      	ROL  R21
0007b1 1a0e      	SUB  R0,R30
0007b2 0a1f      	SBC  R1,R31
0007b3 0b46      	SBC  R20,R22
0007b4 0b57      	SBC  R21,R23
0007b5 f428      	BRCC __DIVD21U2
0007b6 0e0e      	ADD  R0,R30
0007b7 1e1f      	ADC  R1,R31
0007b8 1f46      	ADC  R20,R22
0007b9 1f57      	ADC  R21,R23
0007ba c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0007bb 60a1      	SBR  R26,1
                 __DIVD21U3:
0007bc 953a      	DEC  R19
0007bd f759      	BRNE __DIVD21U1
0007be 01fd      	MOVW R30,R26
0007bf 01bc      	MOVW R22,R24
0007c0 01d0      	MOVW R26,R0
0007c1 01ca      	MOVW R24,R20
0007c2 915f      	POP  R21
0007c3 914f      	POP  R20
0007c4 913f      	POP  R19
0007c5 9508      	RET
                 
                 __DIVD21:
0007c6 d004      	RCALL __CHKSIGND
0007c7 dfda      	RCALL __DIVD21U
0007c8 f40e      	BRTC __DIVD211
0007c9 dfa4      	RCALL __ANEGD1
                 __DIVD211:
0007ca 9508      	RET
                 
                 __CHKSIGND:
0007cb 94e8      	CLT
0007cc ff77      	SBRS R23,7
0007cd c002      	RJMP __CHKSD1
0007ce df9f      	RCALL __ANEGD1
0007cf 9468      	SET
                 __CHKSD1:
0007d0 ff97      	SBRS R25,7
0007d1 c004      	RJMP __CHKSD2
0007d2 dfa3      	RCALL __ANEGD2
0007d3 f800      	BLD  R0,0
0007d4 9403      	INC  R0
0007d5 fa00      	BST  R0,0
                 __CHKSD2:
0007d6 9508      	RET
                 
                 __GETW1PF:
0007d7 9005      	LPM  R0,Z+
0007d8 91f4      	LPM  R31,Z
0007d9 2de0      	MOV  R30,R0
0007da 9508      	RET
                 
                 __PUTPARD1:
0007db 937a      	ST   -Y,R23
0007dc 936a      	ST   -Y,R22
0007dd 93fa      	ST   -Y,R31
0007de 93ea      	ST   -Y,R30
0007df 9508      	RET
                 
                 _delay_ms:
0007e0 9610      	adiw r26,0
0007e1 f039      	breq __delay_ms1
                 __delay_ms0:
0007e2 95a8      	wdr
                +
0007e3 ed80     +LDI R24 , LOW ( 0x7D0 )
0007e4 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0007e5 9701     +SBIW R24 , 1
0007e6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0007e7 9711      	sbiw r26,1
0007e8 f7c9      	brne __delay_ms0
                 __delay_ms1:
0007e9 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega328P register use summary:
r0 :  57 r1 :  14 r2 :   0 r3 :   9 r4 :   9 r5 :   2 r6 :   2 r7 :   5 
r8 :   5 r9 :   8 r10:   8 r11:   5 r12:   5 r13:   4 r14:   4 r15:  10 
r16:  74 r17:  77 r18:  60 r19:  36 r20:  25 r21:  30 r22:  34 r23:  24 
r24:  31 r25:  16 r26: 158 r27:  61 r28:  26 r29:   1 r30: 526 r31: 140 
x  :  30 y  : 266 z  :  17 
Registers used: 34 out of 35 (97.1%)

ATmega328P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  18 add   :  23 
adiw  :  28 and   :   1 andi  :  38 asr   :   0 bclr  :   0 bld   :   1 
brbc  :   0 brbs  :   0 brcc  :   2 brcs  :   0 break :   0 breq  :  53 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  10 
brlt  :   0 brmi  :   0 brne  :  55 brpl  :   1 brsh  :  10 brtc  :   1 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   1 call  :   0 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  50 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   7 
cp    :  23 cpc   :  12 cpi   :  73 cpse  :   0 dec   :   4 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   6 ijmp  :   0 
in    :   2 inc   :   3 jmp   :  29 ld    :  60 ldd   :  83 ldi   : 215 
lds   :  82 lpm   :  14 lsl   :   4 lsr   :   4 mov   :  69 movw  :  43 
mul   :   6 muls  :   0 mulsu :   0 neg   :   4 nop   :   0 or    :   3 
ori   :  31 out   :   8 pop   :   6 push  :   6 rcall : 142 ret   :  51 
reti  :   2 rjmp  : 133 rol   :  10 ror   :   4 sbc   :   6 sbci  :  14 
sbi   :  12 sbic  :   1 sbis  :   4 sbiw  :  25 sbr   :   2 sbrc  :   2 
sbrs  :  12 sec   :   0 seh   :   0 sei   :   2 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    : 124 std   :  34 sts   :  69 sub   :   3 subi  :  26 swap  :   1 
tst   :   7 wdr   :   1 
Instructions used: 69 out of 116 (59.5%)

ATmega328P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000fd4   3936    116   4052   32768  12.4%
[.dseg] 0x000100 0x000317      0     23     23    2048   1.1%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 14 warnings
